{
    "title": "Packer Manifest",
    "name": "packer",
    "type": "object",
    "definitions": {
        "todo": {
            "type": "string",
            "description": "This part isn't complete.  Please feel free to contribute at https://github.com/jboero/hashicorp-schemas/blob/master/JSON/packer/1.5/manifest.json",
            "default": "https://github.com/jboero/hashicorp-schemas/blob/master/JSON/packer/1.5/manifest.json"
        },
        "communicator": {
            "type": "string",
            "description": " Packer currently supports three kinds of communicators.",
            "default": "ssh",
            "enum": ["none", "ssh", "winrm"]
        },
        "aws_region": {
            "type": "string",
            "default": "us-east-1",
            "enum": ["us-east-1", "us-east-2", "us-west-1", "us-west-2",
                "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-3",
                "ap-northeast-2", "ap-southeast-1", "ap-southeast-2",
                "ap-northeast-1", "ca-central1", "cn-north-1", "cn-northwest-1",
                "eu-central-1", "eu-west-1", "eu-west-2", "eu-south-1",
                "eu-west-3", "eu-north-1", "me-south-1", "sa-east-1",
                "us-gov-east-1", "us-gov-west-1"
            ]
        },
        "aws_dev_mapping": {
            "type": "array",
            "description": "Add one or more block device mappings to the AMI. These will be attached when booting a new instance from your AMI. To add a block device during the Packer build see launch_block_device_mappings below. Your options here may vary depending on the type of VM you use. See the BlockDevices documentation for fields.",
            "items": {
                "type": "object",
                "properties": {
                    "device_name": {
                        "type": "string",
                        "default": "/dev/sda1"
                    },
                    "encrypted": {
                        "type": "boolean",
                        "default": true
                    },
                    "iops": {
                        "type": "integer"
                    },
                    "no_device": {
                        "type": "boolean"
                    },
                    "snapshot_id": {
                        "type": "string"
                    },
                    "virtual_name": {
                        "type": "string"
                    },
                    "volume_type": {
                        "type": "string"
                    },
                    "volume_size": {
                        "type": "integer"
                    },
                    "kms_key_id": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "properties": {
        "variables": {
            "type": "object",
            "default": { "key": "value" }
        },
        "builders": {
            "default": [{ "type": "" }],
            "type": "array",
            "items": {
                "anyOf": [{
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is qemu.",
                                "default": "qemu",
                                "enum": ["qemu"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "iso_skip_cache": {
                                "type": "boolean",
                                "description": "Use iso from provided url. Qemu must support curl block device. This defaults to false.",
                                "default": false
                            },
                            "accelerator": {
                                "type": "string",
                                "description": "The accelerator type to use when running the VM. This may be none, kvm, tcg, hax, hvf, whpx, or xen. The appropriate software must have already been installed on your build machine to use the accelerator you specified. When no accelerator is specified, Packer will try to use kvm if it is available but will default to tcg otherwise.",
                                "default": "kvm",
                                "enum": ["none", "kvm", "tcg", "hax", "hvf", "whpx", "xen"]
                            },
                            "disk_additional_size": {
                                "type": "array",
                                "description": "Additional disks to create. Uses vm_name as the disk name template and appends -# where # is the position in the array. # starts at 1 since 0 is the default disk. Each string represents the disk image size in bytes. Optional suffixes 'k' or 'K' (kilobyte, 1024), 'M' (megabyte, 1024k), 'G' (gigabyte, 1024M), 'T' (terabyte, 1024G), 'P' (petabyte, 1024T) and 'E' (exabyte, 1024P) are supported. 'b' is ignored. Per qemu-img documentation. Each additional disk uses the same disk parameters as the default disk. Unset by default.",
                                "items": { "type": "string" }
                            },
                            "cpus": {
                                "type": "integer",
                                "description": "The number of cpus to use when building the VM. The default is 1 CPU.",
                                "default": 1
                            },
                            "disk_interface": {
                                "type": "string",
                                "description": "(string) - The interface to use for the disk. Allowed values include any of ide, scsi, virtio or virtio-scsi^*. Note also that any boot commands or kickstart type scripts must have proper adjustments for resulting device names. The Qemu builder uses virtio by default.",
                                "default": "virtio",
                                "enum": ["ide", "scsi", "virtio", "virtio-scsi"]
                            },
                            "disk_size": {
                                "type": "string",
                                "description": "The size in bytes of the hard disk of the VM. Suffix with the first letter of common byte types. Use 'k or 'K' for kilobytes, 'M' for megabytes, G for gigabytes, and T for terabytes. If no value is provided for disk_size, Packer uses a default of 40960M (40 GB). If a disk_size number is provided with no units, Packer will default to Megabytes.",
                                "default": "40960M"
                            },
                            "disk_cache": {
                                "type": "string",
                                "description": "The cache mode to use for disk. Allowed values include any of writethrough,",
                                "default": "writeback",
                                "enum": ["writethrough", "writeback", "none", "unsafe", "directsync"]
                            },
                            "disk_discard": {
                                "type": "string",
                                "description": "The discard mode to use for disk. Allowed values include any of unmap or ignore. By default, this is set to ignore.",
                                "default": "ignore"
                            },
                            "disk_detect_zeroes": {
                                "type": "string",
                                "description": "The detect-zeroes mode to use for disk. Allowed values include any of unmap, on or off. Defaults to off. When the value is 'off' we don't set the flag in the qemu command, so that Packer still works with old versions of QEMU that don't have this option.",
                                "default": "off",
                                "enum": ["on", "off"]
                            },
                            "skip_compaction": {
                                "type": "boolean",
                                "description": "Packer compacts the QCOW2 image using qemu-img convert. Set this option to true to disable compacting. Defaults to false.",
                                "default": false
                            },
                            "disk_compression": {
                                "type": "boolean",
                                "description": "Apply compression to the QCOW2 disk file using qemu-img convert. Defaults to false.",
                                "default": false
                            },
                            "format": {
                                "type": "string",
                                "description": "Either qcow2 or raw, this specifies the output format of the virtual machine image. This defaults to qcow2.",
                                "default": "qcow2",
                                "enum": ["qcow2", "raw"]
                            },
                            "headless": {
                                "type": "boolean",
                                "description": "acker defaults to building QEMU virtual machines by launching a GUI that shows the console of the machine being built. When this value is set to true, the machine will start without a console.",
                                "default": false
                            },
                            "disk_image": {
                                "type": "boolean",
                                "description": "Packer defaults to building from an ISO file, this parameter controls whether the ISO URL supplied is actually a bootable QEMU image. When this value is set to true, the machine will either clone the source or use it as a backing file (if use_backing_file is true); then, it will resize the image according to disk_size and boot it.",
                                "default": false
                            },
                            "use_backing_file": {
                                "type": "boolean",
                                "description": "Only applicable when disk_image is true and format is qcow2, set this option to true to create a new QCOW2 file that uses the file located at iso_url as a backing file. The new file will only contain blocks that have changed compared to the backing file, so enabling this option can significantly reduce disk usage.",
                                "default": "false"
                            },
                            "machine_type": {
                                "type": "string",
                                "description": "The type of machine emulation to use. Run your qemu binary with the flags -machine help to list available types for your system. This defaults to pc.",
                                "default": "pc"
                            },
                            "memory": {
                                "type": "integer",
                                "description": "The amount of memory to use when building the VM in megabytes. This defaults to 512 megabytes.",
                                "default": 512
                            },
                            "net_device": {
                                "type": "string",
                                "description": "The driver to use for the network interface. Allowed values ne2k_pci, i82551, i82557b, i82559er, rtl8139, e1000, pcnet, virtio, virtio-net, virtio-net-pci, usb-net, i82559a, i82559b, i82559c, i82550, i82562, i82557a, i82557c, i82801, vmxnet3, i82558a or i82558b. The Qemu builder uses virtio-net by default.",
                                "default": "virtio-net",
                                "enum": ["net2k_pci", "i82551", "i82557b", "i82559er", "rtl8139", "e1000", "pcnet", "virtio", "virtio-net", "virtio-net-pci", "usb-net", "i82559a", "i82559b",
                                    "i82559c", "i82550", "i82562", "i82557a", "i82557c", "i82801", "vmxnet3", "i82558a", "i82558b"
                                ]
                            },
                            "output_directory": {
                                "type": "string",
                                "description": "This is the path to the directory where the resulting virtual machine will be created. This may be relative or absolute. If relative, the path is relative to the working directory when packer is executed. This directory must not exist or be empty prior to running the builder. By default this is output-BUILDNAME where 'BUILDNAME' is the name of the build."
                            },
                            "qemuargs": {
                                "type": "array",
                                "description": "Allows complete control over the qemu command line (though not, at this time, qemu-img). Each array of strings makes up a command line switch that overrides matching default switch/value pairs. Any value specified as an empty string is ignored. All values after the switch are concatenated with no separator.",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "default": [
                                    ["-cpu", "host"]
                                ]
                            },
                            "qemu_binary": {
                                "type": "string",
                                "description": "The name of the Qemu binary to look for. This defaults to qemu-system-x86_64, but may need to be changed for some platforms. For example qemu-kvm, or qemu-system-i386 may be a better choice for some systems.",
                                "default": "qemu-system-x86_64"
                            },
                            "qmp_enable": {
                                "type": "boolean",
                                "description": "Enable QMP socket. Location is specified by qmp_socket_path. Defaults to false.",
                                "default": false
                            },
                            "qmp_socket_path": {
                                "type": "string",
                                "description": "QMP Socket Path when qmp_enable is true. Defaults to output_directory/vm_name.monitor.",
                                "default": ""
                            },
                            "ssh_host_port_min": {
                                "type": "integer",
                                "description": "The minimum and maximum port to use for the SSH port on the host machine which is forwarded to the SSH port on the guest machine. Because Packer often runs in parallel, Packer will choose a randomly available port in this range to use as the host port. By default this is 2222 to 4444.",
                                "default": 2222
                            },
                            "ssh_host_port_max": {
                                "type": "integer",
                                "description": "The minimum and maximum port to use for the SSH port on the host machine which is forwarded to the SSH port on the guest machine. Because Packer often runs in parallel, Packer will choose a randomly available port in this range to use as the host port. By default this is 2222 to 4444.",
                                "default": 4444
                            },
                            "use_default_display": {
                                "type": "boolean",
                                "description": "If true, do not pass a -display option to qemu, allowing it to choose the default. This may be needed when running under macOS, and getting errors about sdl not being available.",
                                "default": false
                            },
                            "display": {
                                "type": "string",
                                "description": "What QEMU -display option to use. Defaults to gtk, use none to not pass the -display option allowing QEMU to choose the default. This may be needed when running under macOS, and getting errors about sdl not being available.",
                                "default": ""
                            },
                            "vnc_bind_address": {
                                "type": "string",
                                "description": "The IP address that should be binded to for VNC. By default packer will use 127.0.0.1 for this. If you wish to bind to all interfaces use 0.0.0.0.",
                                "default": "127.0.0.1"
                            },
                            "vnc_use_password": {
                                "type": "boolean",
                                "description": "Whether or not to set a password on the VNC server. This option automatically enables the QMP socket. See qmp_socket_path. Defaults to false.",
                                "default": false
                            },
                            "vnc_port_min": {
                                "type": "integer",
                                "description": "The minimum and maximum port to use for VNC access to the virtual machine. The builder uses VNC to type the initial boot_command. Because Packer generally runs in parallel, Packer uses a randomly chosen port in this range that appears available. By default this is 5900 to 6000. The minimum and maximum ports are inclusive.",
                                "default": 5900
                            },
                            "vnc_port_max": {
                                "type": "integer",
                                "description": "The minimum and maximum port to use for VNC access to the virtual machine. The builder uses VNC to type the initial boot_command. Because Packer generally runs in parallel, Packer uses a randomly chosen port in this range that appears available. By default this is 5900 to 6000. The minimum and maximum ports are inclusive.",
                                "default": 6000
                            },
                            "vm_name": {
                                "type": "string",
                                "description": ""
                            },

                            "iso_checksum": {
                                "type": "string",
                                "description": "ISO checksum for verification."
                            },
                            "iso_checksum_type": {
                                "type": "string",
                                "description": "Checksum algorithm used for verification.",
                                "default": "none",
                                "enum": ["", "none", "md5", "sha1", "sha256", "sha512", "file"]
                            },
                            "iso_url": {
                                "type": "string",
                                "description": "A URL to the ISO containing the installation image or virtual hard drive (VHD or VHDX) file to clone..",
                                "default": "https://distro.com/iso/whatever.iso"
                            },
                            "iso_urls": {
                                "type": "array",
                                "description": "A list of URLs to the ISO containing the installation image or virtual hard drive (VHD or VHDX) file to clone..",
                                "items": {
                                    "type": "string"
                                },
                                "default": ["https://distro.com/iso/whatever.iso"]
                            },
                            "iso_target_path": {
                                "type": "string",
                                "description": "The path where the iso should be saved after download. By default will go in the packer cache, with a hash of the original filename and checksum as its name."
                            },
                            "iso_target_extension": {
                                "type": "string",
                                "description": "The extension of the iso file after download. This defaults to iso.",
                                "default": "iso"
                            },

                            "http_directory": {
                                "type": "string",
                                "description": "Path to a directory to serve using an HTTP server. The files in this directory will be available over HTTP that will be requestable from the virtual machine. This is useful for hosting kickstart files and so on. By default this is an empty string, which means no HTTP server will be started. The address and port of the HTTP server will be available as variables in boot_command.",
                                "default": ""
                            },
                            "http_port_min": {
                                "type": "integer",
                                "description": "These are the minimum and maximum port to use for the HTTP server started to serve the http_directory. Because Packer often runs in parallel, Packer will choose a randomly available port in this range to run the HTTP server. If you want to force the HTTP server to be on one port, make this minimum and maximum port the same. By default the values are 8000 and 9000, respectively.",
                                "default": 8000
                            },
                            "http_port_max": {
                                "type": "integer",
                                "description": "These are the minimum and maximum port to use for the HTTP server started to serve the http_directory. Because Packer often runs in parallel, Packer will choose a randomly available port in this range to run the HTTP server. If you want to force the HTTP server to be on one port, make this minimum and maximum port the same. By default the values are 8000 and 9000, respectively.",
                                "default": 9000
                            },

                            "floppy_files": {
                                "type": "array",
                                "description": "A list of files to place onto a floppy disk that is attached when the VM is booted. Currently, no support exists for creating sub-directories on the floppy. Wildcard characters (\\*, ?, and []) are allowed. Directory names are also allowed, which will add all the files found in the directory to the floppy.",
                                "items": {
                                    "type": "string"
                                },
                                "default": ["/path/to/flopppyfile"]
                            },
                            "floppy_dirs": {
                                "type": "array",
                                "description": "A list of directories to place onto the floppy disk recursively. This is similar to the floppy_files option except that the directory structure is preserved. This is useful for when your floppy disk includes drivers or if you just want to organize it's contents as a hierarchy. Wildcard characters (\\*, ?, and []) are allowed. The maximum summary size of all files in the listed directories are the same as in floppy_files.",
                                "items": {
                                    "type": "string"
                                },
                                "default": ["/path/to/flopppydir/"]
                            },
                            "floppy_label": {
                                "type": "string",
                                "description": "Floppy Label"
                            },

                            "shutdown_command": {
                                "type": "string",
                                "description": "The command to use to gracefully shut down the machine once all provisioning is complete. By default this is an empty string, which tells Packer to just forcefully shut down the machine. This setting can be safely omitted if for example, a shutdown command to gracefully halt the machine is configured inside a provisioning script. If one or more scripts require a reboot it is suggested to leave this blank (since reboots may fail) and instead specify the final shutdown command in your last script.",
                                "default": "shutdown -P now"
                            },
                            "shutdown_timeout": {
                                "type": "string",
                                "description": "The amount of time to wait after executing the shutdown_command for the virtual machine to actually shut down. If the machine doesn't shut down in this time it is considered an error. By default, the time out is '5m' (five minutes).",
                                "default": "1h5m2s"
                            },

                            "boot_command": {
                                "type": "array",
                                "description": "Boot command as described here: https://www.packer.io/docs/builders/qemu/#-1",
                                "items": {
                                    "type": "string"
                                },
                                "default": ["<tab><wait>"]
                            },
                            "disable_vnc": {
                                "type": "boolean",
                                "description": "Whether to create a VNC connection or not. A boot_command cannot be used when this is true. Defaults to false.",
                                "default": false
                            },
                            "boot_key_interval": {
                                "type": "string",
                                "description": "Time in ms to wait between each key press",
                                "default": "1h5m2s"
                            },
                            "boot_keygroup_interval": {
                                "type": "string",
                                "description": "Time to wait after sending a group of key pressses. The value of this should be a duration. Examples are 5s and 1m30s which will cause Packer to wait five seconds and one minute 30 seconds, respectively. If this isn't specified, a sensible default value is picked depending on the builder type.",
                                "default": "1h5m2s"
                            },
                            "boot_wait": {
                                "type": "string",
                                "description": "The time to wait after booting the initial virtual machine before typing the boot_command. The value of this should be a duration. Examples are 5s and 1m30s which will cause Packer to wait five seconds and one minute 30 seconds, respectively. If this isn't specified, the default is 10s or 10 seconds. To set boot_wait to 0s, use a negative number, such as '-1s'",
                                "default": "10s"
                            },
                            "pause_before_connecting": {
                                "type": "string",
                                "description": "We recommend that you enable SSH or WinRM as the very last step in your guest's bootstrap script, but sometimes you may have a race condition where you need Packer to wait before attempting to connect to your guest.",
                                "default": "10m"
                            }
                        }
                    }, {
                        "type": "object",
                        "oneOf": [
                          {
                            "required": ["commit"]
                          },
                          {
                            "required": ["discard"]
                          },
                          {
                            "required": ["export_path"]
                          }
                        ],
                        "required": ["image", "message"],
                        "properties": {
                            "type": {
                                "description": "Type is Docker.",
                                "default": "docker",
                                "enum": ["docker"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "commit": {
                                "type": "boolean",
                                "description": "If true, the container will be committed to an image rather than exported.",
                                "default": false
                            },
                            "discard": {
                                "type": "boolean",
                                "description": "Throw away the container when the build is complete. This is useful for the artifice post-processor.",
                                "default": false
                            },
                            "export_path": {
                                "type": "string",
                                "description": "The path where the final container will be exported as a tar file."
                            },
                            "image": {
                                "type": "string",
                                "description": "The base image for the Docker container that will be started. This image will be pulled from the Docker registry if it doesn't already exist."
                            },
                            "message": {
                                "type": "string",
                                "description": "Set a message for the commit."
                            },

                            "aws_access_key": {
                                "type": "string",
                                "description": "The AWS access key used to communicate with AWS. Learn how to set this."
                            },
                            "aws_secret_key": {
                                "type": "string",
                                "description": "The AWS secret key used to communicate with AWS. Learn how to set this."
                            },
                            "aws_token": {
                                "type": "string",
                                "description": "The AWS access token to use. This is different from the access key and secret key. If you're not sure what this is, then you probably don't need it. This will also be read from the AWS_SESSION_TOKEN environmental variable."
                            },
                            "aws_profile": {
                                "type": "string",
                                "description": "The AWS shared credentials profile used to communicate with AWS. Learn how to set this."
                            },
                            "author": {
                                "type": "string",
                                "description": "Set the author (e-mail) of a commit.",
                                "default": ""
                            },
                            "changes": {
                                "type": "array",
                                "description": "Dockerfile instructions to add to the commit. Example of instructions are CMD, ENTRYPOINT, ENV, and EXPOSE. Example: [ 'USER ubuntu', 'WORKDIR /app', 'EXPOSE 8080' ]",
                                "items": {
                                    "type": "string"
                                },
                                "default": ["EXPOSE 8080"]
                            },
                            "container_dir": {
                                "type": "string",
                                "description": "The directory inside container to mount temp directory from host server for work file provisioner. This defaults to c:/packer-files on windows and /packer-files on other systems."
                            },
                            "exec_user": {
                                "type": "string",
                                "description": "Username (UID) to run remote commands with. You can also set the group name/ID if you want: (UID or UID:GID). You may need this if you get permission errors trying to run the shell or other provisioners."
                            },
                            "privileged": {
                                "type": "boolean",
                                "description": "If true, run the docker container with the --privileged flag. This defaults to false if not set.",
                                "default": false
                            },
                            "pull": {
                                "type": "boolean",
                                "description": "If true, the configured image will be pulled using docker pull prior to use. Otherwise, it is assumed the image already exists and can be used. This defaults to true if not set.",
                                "default": "true"
                            },
                            "run_command": {
                                "type": "array",
                                "description": "An array of arguments to pass to docker run in order to run the container.",
                                "items": {
                                    "type": "string"
                                },
                                "default": ["-d", "-i", "-t", "--entrypoint=powershell", "--", "{{.Image}}"]
                            },
                            "volumes": {
                                "type": "object",
                                "description": "A mapping of additional volumes to mount into this container. The key of the object is the host path, the value is the container path.",
                                "default": { "/local/path": "/container/path" }
                            },
                            "fix_upload_owner": {
                                "type": "boolean",
                                "description": "If true, files uploaded to the container will be owned by the user the container is running as. If false, the owner will depend on the version of docker installed in the system. Defaults to true.",
                                "default": true
                            },
                            "windows_container": {
                                "type": "boolean",
                                "description": "If 'true', tells Packer that you are building a Windows container running on a windows host. This is necessary for building Windows containers, because our normal docker bindings do not work for them.",
                                "default": false
                            },
                            "login": {
                                "type": "boolean",
                                "description": "This is used to login to dockerhub to pull a private base container. For pushing to dockerhub, see the docker post-processors",
                                "default": false
                            },
                            "login_password": {
                                "type": "string",
                                "description": "The password to use to authenticate to login."
                            },
                            "login_server": {
                                "type": "string",
                                "description": "The server address to login to."
                            },
                            "login_username": {
                                "type": "string",
                                "description": "The username to use to authenticate to login.",
                                "default": ""
                            },
                            "ecr_login": {
                                "type": "boolean",
                                "description": "Defaults to false. If true, the builder will login in order to pull the image from Amazon EC2 Container Registry (ECR). The builder only logs in for the duration of the pull. If true login_server is required and login, login_username, and login_password will be ignored. For more information see the section on ECR."
                            }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Amazon EBS.",
                                "default": "amazon-ebs",
                                "enum": ["amazon-ebs"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "ami_block_device_mappings": {
                                "type": "array",
                                "items": { "$ref": "#/definitions/aws_dev_mapping" }
                            },
                            "launch_block_device_mappings": {
                                "type": "array",
                                "items": { "$ref": "#/definitions/aws_dev_mapping" }
                            },
                            "run_volume_tags": {
                                "type": "object",
                                "description": "Tags to apply to the volumes that are launched to create the AMI. These tags are not applied to the resulting AMI unless they're duplicated in tags. This is a template engine, see Build template data for more information.",
                                "default": { "sampletag": "samplevalue" }
                            },
                            "no_ephemeral": {
                                "type": "boolean",
                                "description": "Relevant only to Windows guests: If you set this flag, we'll add clauses to the launch_block_device_mappings that make sure ephemeral drives don't show up in the EC2 console. If you launched from the EC2 console, you'd get this automatically, but the SDK does not provide this service. For more information, see https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/InstanceStorage.html. Because we don't validate the OS type of your guest, it is up to you to make sure you don't set this for *nix guests; behavior may be unpredictable.",
                                "default": false
                            },

                            "ami_name": {
                                "type": "string",
                                "description": "The name of the resulting AMI that will appear when managing AMIs in the AWS console or via APIs. This must be unique. To help make this unique, use a function like timestamp (see template engine for more info)."
                            },
                            "ami_description": {
                                "type": "string",
                                "description": "The description to set for the resulting AMI(s). By default this description is empty. This is a template engine, see Build template data for more information."
                            },
                            "ami_virtualization_type": {
                                "type": "string",
                                "description": "The type of virtualization for the AMI you are building. This option is required to register HVM images. Can be paravirtual (default) or hvm.",
                                "default": "paravirtual",
                                "enum": ["paravirtual", "hvm"]
                            },
                            "ami_users": {
                                "type": "array",
                                "description": "A list of account IDs that have access to launch the resulting AMI(s). By default no additional users other than the user creating the AMI has permissions to launch it.",
                                "items": {
                                    "type": "string"
                                },
                                "default": [""]
                            },
                            "ami_groups": {
                                "type": "array",
                                "description": "A list of groups that have access to launch the resulting AMI(s). By default no groups have permission to launch the AMI. all will make the AMI publicly accessible.",
                                "items": {
                                    "type": "string"
                                },
                                "default": [""]
                            },
                            "ami_product_codes": {
                                "type": "array",
                                "description": "A list of product codes to associate with the AMI. By default no product codes are associated with the AMI.",
                                "items": {
                                    "type": "string"
                                },
                                "default": [""]
                            },
                            "ami_regions": {
                                "type": "array",
                                "description": "A list of regions to copy the AMI to. Tags and attributes are copied along with the AMI. AMI copying takes time depending on the size of the AMI, but will generally take many minutes.",
                                "items": {
                                    "$ref": "#/definitions/aws_region"
                                },
                                "default": [""]
                            },
                            "skip_region_validation": {
                                "type": "boolean",
                                "description": "Set to true if you want to skip validation of the ami_regions configuration option. Default false.",
                                "default": false
                            },
                            "tags": {
                                "type": "object",
                                "description": "Key/value pair tags applied to the AMI. This is a template engine, see Build template data for more information.",
                                "default": { "YOURTAG": "YOURVALUE" }
                            },
                            "tag": {
                                "type": "array",
                                "description": "Same as tags but defined as a singular repeatable block containing a key and a value field. In HCL2 mode the dynamic_block will allow you to create those programatically.",
                                "default": [{ "key": "value" }]
                            },
                            "ena_support": {
                                "type": "string",
                                "description": "Enable enhanced networking (ENA but not SriovNetSupport) on HVM-compatible AMIs. If set, add ec2:ModifyInstanceAttribute to your AWS IAM policy.",
                                "default": false
                            },
                            "sriov_support": {
                                "type": "boolean",
                                "description": "Enable enhanced networking (SriovNetSupport but not ENA) on HVM-compatible AMIs. If true, add ec2:ModifyInstanceAttribute to your AWS IAM policy. Note: you must make sure enhanced networking is enabled on your instance. See Amazon's documentation on enabling enhanced networking. Default false.",
                                "default": false
                            },
                            "force_deregister": {
                                "type": "boolean",
                                "description": "Force Packer to first deregister an existing AMI if one with the same name already exists. Default false.",
                                "default": false
                            },
                            "force_delete_snapshot": {
                                "type": "boolean",
                                "description": "Force Packer to delete snapshots associated with AMIs, which have been deregistered by force_deregister. Default false.",
                                "default": false
                            },
                            "encrypt_boot": {
                                "type": "boolean",
                                "description": "Whether or not to encrypt the resulting AMI when copying a provisioned instance to an AMI. By default, Packer will keep the encryption setting to what it was in the source image. Setting false will result in an unencrypted image, and true will result in an encrypted one. If you have used the launch_block_device_mappings to set an encryption key and that key is the same as the one you want the image encrypted with at the end, then you don't need to set this field; leaving it empty will prevent an unnecessary extra copy step and save you some time.",
                                "default": true
                            },
                            "kms_key_id": {
                                "type": "string",
                                "description": "ID, alias or ARN of the KMS key to use for boot volume encryption. This only applies to the main region, other regions where the AMI will be copied will be encrypted by the default EBS KMS key. For valid formats see KmsKeyId in the AWS API docs - CopyImage. This field is validated by Packer, when using an alias, you will have to prefix kms_key_id with alias/."
                            },
                            "region_mks_key_ids": {
                                "type": "object",
                                "description": "regions to copy the ami to, along with the custom kms key id (alias or arn) to use for encryption for that region. Keys must match the regions provided in ami_regions. If you just want to encrypt using a default ID, you can stick with kms_key_id and ami_regions. If you want a region to be encrypted with that region's default key ID, you can use an empty string '' instead of a key id in this map. (e.g. 'us-east-1': '') However, you cannot use default key IDs if you are using this in conjunction with snapshot_users -- in that situation you must use custom keys. For valid formats see KmsKeyId in the AWS API docs - CopyImage.",
                                "default": { "mapkey": "value" }
                            },
                            "skip_save_build_region": {
                                "type": "boolean",
                                "description": "If true, Packer will not check whether an AMI with the ami_name exists in the region it is building in. It will use an intermediary AMI name, which it will not convert to an AMI in the build region. It will copy the intermediary AMI into any regions provided in ami_regions, then delete the intermediary AMI. Default false.",
                                "default": false
                            },
                            "snapshot_tags": {
                                "type": "object",
                                "description": "Key/value pair tags to apply to snapshot. They will override AMI tags if already applied to snapshot. This is a template engine, see Build template data for more information.",
                                "default": { "key": "value" }
                            },
                            "snapshot_tag": {
                                "type": "array",
                                "description": "Same as snapshot_tags but defined as a singular repeatable block containing a key and a value field. In HCL2 mode the dynamic_block will allow you to create those programatically.",
                                "default": [{ "key": "value" }]
                            },
                            "snapshot_users": {
                                "type": "array",
                                "description": "A list of account IDs that have access to create volumes from the snapshot(s). By default no additional users other than the user creating the AMI has permissions to create volumes from the backing snapshot(s).",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "snapshot_groups": {
                                "type": "array",
                                "description": "A list of group IDs that have access to create volumes from the snapshot(s). By default no additional users other than the user creating the AMI has permissions to create volumes from the backing snapshot(s).",
                                "items": { "type": "string" },
                                "default": [""]
                            },

                            "access_key": {
                                "type": "string",
                                "description": "The access key used to communicate with AWS. Learn how to set this. On EBS, this is not required if you are using use_vault_aws_engine for authentication instead."
                            },
                            "region": {
                                "$ref": "#/definitions/aws_region",
                                "description": "The name of the region, such as us-east-1, in which to launch the EC2 instance to create the AMI. When chroot building, this value is guessed from environment."
                            },
                            "secret_key": {
                                "type": "string",
                                "description": "The secret key used to communicate with AWS. Learn how to set this. This is not required if you are using use_vault_aws_engine for authentication instead.",
                                "default": ""
                            },

                            "custom_endpoint_ec2": {
                                "type": "string",
                                "description": "This option is useful if you use a cloud provider whose API is compatible with aws EC2. Specify another endpoint like this https://ec2.custom.endpoint.com.",
                                "default": ""
                            },
                            "decode_authorization_messages": {
                                "type": "boolean",
                                "description": "Enable automatic decoding of any encoded authorization (error) messages using the sts:DecodeAuthorizationMessage API. Note: requires that the effective user/role have permissions to sts:DecodeAuthorizationMessage on resource *. Default false.",
                                "default": false
                            },
                            "insecure_skip_tls_verify": {
                                "type": "boolean",
                                "description": "This allows skipping TLS verification of the AWS EC2 endpoint. The default is false.",
                                "default": false
                            },
                            "max_retries": {
                                "type": "integer",
                                "description": "This is the maximum number of times an API call is retried, in the case where requests are being throttled or experiencing transient failures. The delay between the subsequent API calls increases exponentially."
                            },
                            "mfa_code": {
                                "type": "string",
                                "description": "The MFA TOTP code. This should probably be a user variable since it changes all the time.",
                                "default": ""
                            },
                            "profile": {
                                "type": "string",
                                "description": "The profile to use in the shared credentials file for AWS. See Amazon's documentation on specifying profiles for more details.",
                                "default": ""
                            },
                            "skip_meatadata_api_check": {
                                "type": "boolean",
                                "description": "Skip Metadata Api Check",
                                "default": false
                            },
                            "token": {
                                "type": "string",
                                "description": "The access token to use. This is different from the access key and secret key. If you're not sure what this is, then you probably don't need it. This will also be read from the AWS_SESSION_TOKEN environmental variable."
                            },
                            "vault_aws_engine": {
                                "type": "object",
                                "description": "Get credentials from Hashicorp Vault's aws secrets engine. You must already have created a role to use. For more information about generating credentials via the Vault engine, see the Vault docs. If you set this flag, you must also set the below options:"
                            },

                            "instance_type": {
                                "type": "string",
                                "description": "The EC2 instance type to use while building the AMI, such as t2.small.",
                                "default": "t2.small"
                            },
                            "source_ami": {
                                "type": "string",
                                "description": "The source AMI whose root volume will be copied and provisioned on the currently running instance. This must be an EBS-backed AMI with a root volume snapshot that you have access to. Note: this is not used when from_scratch is set to true."
                            },

                            "associate_public_ip_address": {
                                "type": "boolean",
                                "description": "If using a non-default VPC, public IP addresses are not provided by default. If this is true, your new instance will get a Public IP. default: false",
                                "default": false
                            },
                            "availability_zone": {
                                "type": "string",
                                "description": "Destination availability zone to launch instance in. Leave this empty to allow Amazon to auto-assign."
                            },
                            "block_duration_minutes": {
                                "type": "integer",
                                "description": "Requires spot_price to be set. The required duration for the Spot Instances (also known as Spot blocks). This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360). You can't specify an Availability Zone group or a launch group if you specify a duration."
                            },
                            "disable_stop_instance": {
                                "type": "boolean",
                                "description": "Packer normally stops the build instance after all provisioners have run. For Windows instances, it is sometimes desirable to run Sysprep which will stop the instance for you. If this is set to true, Packer will not stop the instance but will assume that you will send the stop signal yourself through your final provisioner. You can do this with a windows-shell provisioner. Note that Packer will still wait for the instance to be stopped, and failing to send the stop signal yourself, when you have set this flag to true, will cause a timeout. Example of a valid shutdown command:",
                                "default": false
                            },
                            "ebs_optimized": {
                                "type": "boolean",
                                "description": "Mark instance as EBS Optimized. Default false.",
                                "default": false
                            },
                            "enable_t2_unlimited": {
                                "type": "boolean",
                                "description": "Enabling T2 Unlimited allows the source instance to burst additional CPU beyond its available CPU Credits for as long as the demand exists. This is in contrast to the standard configuration that only allows an instance to consume up to its available CPU Credits. See the AWS documentation for T2 Unlimited and the T2 Unlimited Pricing section of the Amazon EC2 On-Demand Pricing document for more information. By default this option is disabled and Packer will set up a T2 Standard instance instead.",
                                "default": false
                            },
                            "iam_instance_profile": {
                                "type": "string",
                                "description": "The name of an IAM instance profile to launch the EC2 instance with.",
                                "default": ""
                            },
                            "skip_profile_validation": {
                                "type": "boolean",
                                "description": "Whether or not to check if the IAM instance profile exists. Defaults to false",
                                "default": false
                            },
                            "temporary_iam_instance_profile_policy_document": {
                                "type": "object",
                                "description": "Temporary IAM instance profile policy document If IamInstanceProfile is specified it will be used instead. https://www.packer.io/docs/builders/amazon-ebs#temporary_iam_instance_profile_policy_document"
                            },
                            "shutdown_behavior": {
                                "type": "string",
                                "description": "Automatically terminate instances on shutdown in case Packer exits ungracefully. Possible values are stop and terminate. Defaults to stop.",
                                "default": "stop",
                                "enum": ["stop", "terminate"]
                            },
                            "security_group_filter": {
                                "type": "object",
                                "description": "https://www.packer.io/docs/builders/amazon-ebs#security_group_filter"
                            },
                            "run_tags": {
                                "type": "object",
                                "description": "Key/value pair tags to apply to the instance that is that is launched to create the EBS volumes. This is a template engine, see Build template data for more information.",
                                "default": { "key": "value" }
                            },
                            "run_tag": {
                                "type": "array",
                                "description": "Key/value pair tags to apply to the instance that is that is launched to create the EBS volumes. This is a template engine, see Build template data for more information.",
                                "default": [{ "key": "value" }]
                            },
                            "security_group_id": {
                                "type": "string",
                                "description": "The ID (not the name) of the security group to assign to the instance. By default this is not set and Packer will automatically create a new temporary security group to allow SSH access. Note that if this is specified, you must be sure the security group allows access to the ssh_port given below."
                            },
                            "security_group_ids": {
                                "type": "array",
                                "description": "The IDs (not the name) of the security group to assign to the instance. By default this is not set and Packer will automatically create a new temporary security group to allow SSH access. Note that if this is specified, you must be sure the security group allows access to the ssh_port given below.",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "source_ami_filter": {
                                "type": "object",
                                "description": "https://www.packer.io/docs/builders/amazon-ebs#source_ami_filter"
                            },
                            "spot_instance_types": {
                                "type": "array",
                                "description": "A list of acceptable instance types to run your build on. We will request a spot instance using the max price of spot_price and the allocation strategy of 'lowest price'. Your instance will be launched on an instance type of the lowest available price that you have in your list. This is used in place of instance_type. You may only set either spot_instance_types or instance_type, not both. This feature exists to help prevent situations where a Packer build fails because a particular availability zone does not have capacity for the specific instance_type requested in instance_type.",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "spot_price": {
                                "type": "string",
                                "description": "With Spot Instances, you pay the Spot price that's in effect for the time period your instances are running. Spot Instance prices are set by Amazon EC2 and adjust gradually based on long-term trends in supply and demand for Spot Instance capacity."
                            },
                            "spot_price_auto_product": {
                                "type": "string",
                                "description": "Required if spot_price is set to auto. This tells Packer what sort of AMI you're launching to find the best spot price. This must be one of: Linux/UNIX, SUSE Linux, Windows, Linux/UNIX (Amazon VPC), SUSE Linux (Amazon VPC), Windows (Amazon VPC)",
                                "default": "Linux/UNIX",
                                "enum": ["Linux/UNIX", "SUSE Linux", "Windows", "Linux/UNIX (Amazon VPC)", "SUSE Linux (Amazon VPC)", "Windows (Amazon VPC)"]
                            },
                            "spot_tags": {
                                "type": "object",
                                "description": "Requires spot_price to be set. Key/value pair tags to apply tags to the spot request that is issued.",
                                "default": { "tagkey": "value" }
                            },
                            "spot_tag": {
                                "type": "array",
                                "description": "Same as spot_tags but defined as a singular repeatable block containing a key and a value field. In HCL2 mode the dynamic_block will allow you to create those programatically.",
                                "default": [{ "tagkey": "value" }]
                            },
                            "subnet_filter": {
                                "type": "object",
                                "description": "https://www.packer.io/docs/builders/amazon-ebs#subnet_filter"
                            },
                            "subnet_id": {
                                "type": "string",
                                "description": "If using VPC, the ID of the subnet, such as subnet-12345def, where Packer will launch the EC2 instance. This field is required if you are using an non-default VPC."
                            },
                            "temporary_key_pair_name": {
                                "type": "string",
                                "description": "The name of the temporary key pair to generate. By default, Packer generates a name that looks like packer_<UUID>, where <UUID> is a 36 character unique identifier.",
                                "default": ""
                            },
                            "temporary_security_group_souce_cidrs": {
                                "type": "array",
                                "description": "A list of IPv4 CIDR blocks to be authorized access to the instance, when packer is creating a temporary security group.",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "user_data": {
                                "type": "string",
                                "description": "User data to apply when launching the instance. Note that you need to be careful about escaping characters due to the templates being JSON. It is often more convenient to use user_data_file, instead. Packer will not automatically wait for a user script to finish before shutting down the instance this must be handled in a provisioner."
                            },
                            "user_data_file": {
                                "type": "string",
                                "description": "Path to a file that will be used for the user data when launching the instance."
                            },
                            "vpc_filter": {
                                "type": "object",
                                "description": "https://www.packer.io/docs/builders/amazon-ebs#vpc_filter"
                            },
                            "vpc_id": {
                                "type": "string",
                                "description": "If launching into a VPC subnet, Packer needs the VPC ID in order to create a temporary security group within the VPC. Requires subnet_id to be set. If this field is left blank, Packer will try to get the VPC ID from the subnet_id."
                            },
                            "windows_password_timeout": {
                                "type": "string",
                                "description": "The timeout for waiting for a Windows password for Windows instances. Defaults to 20 minutes. Example value: 10m",
                                "default": "20m"
                            },
                            "ssh_interface": {
                                "type": "string",
                                "description": "One of public_ip, private_ip, public_dns, or private_dns. If set, either the public IP address, private IP address, public DNS name or private DNS name will be used as the host for SSH. The default behaviour if inside a VPC is to use the public IP address if available, otherwise the private IP address will be used. If not in a VPC the public DNS name will be used. Also works for WinRM.",
                                "default": "public_ip",
                                "enum": ["public_ip", "private_ip", "public_dns", "private_dns"]
                            },

                            "delete_on_termination": {
                                "type": "boolean",
                                "description": "Indicates whether the EBS volume is deleted on instance termination. Default false. NOTE: If this value is not explicitly set to true and volumes are not cleaned up by an alternative method, additional volumes will accumulate after every build.",
                                "default": false
                            },
                            "device_name": {
                                "type": "string",
                                "description": "The device name exposed to the instance (for example, /dev/sdh or xvdh). Required for every device in the block device mapping.",
                                "default": "/dev/sdh"
                            },
                            "encrypted": {
                                "type": "boolean",
                                "description": "Indicates whether or not to encrypt the volume. By default, Packer will keep the encryption setting to what it was in the source image. Setting false will result in an unencrypted device, and true will result in an encrypted one.",
                                "default": true
                            },
                            "iops": {
                                "type": "integer",
                                "description": "The number of I/O operations per second (IOPS) that the volume supports. See the documentation on IOPs for more information",
                                "default": ""
                            },
                            "no_device": {
                                "type": "boolean",
                                "description": "Suppresses the specified device included in the block device mapping of the AMI.",
                                "default": false
                            },
                            "snapshot_id": {
                                "type": "string",
                                "description": "The ID of the snapshot."
                            },
                            "virtual_name": {
                                "type": "string",
                                "description": "The virtual device name. See the documentation on Block Device Mapping for more information."
                            },
                            "volume_name": {
                                "type": "string",
                                "description": "The virtual device name. See the documentation on Block Device Mapping for more information."
                            },
                            "volume_type": {
                                "type": "string",
                                "description": "The volume type. gp2 for General Purpose (SSD) volumes, io1 for Provisioned IOPS (SSD) volumes, st1 for Throughput Optimized HDD, sc1 for Cold HDD, and standard for Magnetic volumes.",
                                "default": "standard",
                                "enum": ["gp2", "st1", "sc1", "standard"]
                            },
                            "volume_size": {
                                "type": "integer",
                                "description": "The size of the volume, in GiB. Required if not specifying a snapshot_id.",
                                "default": 10
                            },

                            "pause_before_connecting": {
                                "type": "string",
                                "description": "We recommend that you enable SSH or WinRM as the very last step in your guest's bootstrap script, but sometimes you may have a race condition where you need Packer to wait before attempting to connect to your guest.",
                                "default": "10m"
                            },
                            "ssh_host": {
                                "type": "string",
                                "description": "The address to SSH to. This usually is automatically configured by the builder."
                            },
                            "ssh_port": {
                                "type": "integer",
                                "description": "The port to connect to SSH. This defaults to 22.",
                                "default": 22
                            },
                            "ssh_password": {
                                "type": "string",
                                "description": "A plaintext password (!) to use to authenticate with SSH."
                            },
                            "ssh_keypair_name": {
                                "type": "string",
                                "description": "If specified, this is the key that will be used for SSH with the machine. The key must match a key pair name loaded up into the remote. By default, this is blank, and Packer will generate a temporary keypair unless ssh_password is used. ssh_private_key_file or ssh_agent_auth must be specified when ssh_keypair_name is utilized.",
                                "default": ""
                            },
                            "ssh_clear_authorized_keys": {
                                "type": "boolean",
                                "description": "If true, Packer will attempt to remove its temporary key from ~/.ssh/authorized_keys and /root/.ssh/authorized_keys. This is a mostly cosmetic option, since Packer will delete the temporary private key from the host system regardless of whether this is set to true (unless the user has set the -debug flag). Defaults to false; currently only works on guests with sed installed.",
                                "default": false
                            },
                            "ssh_private_key_file": {
                                "type": "string",
                                "description": "Path to a PEM encoded private key file to use to authenticate with SSH. The ~ can be used in path and will be expanded to the home directory of current user.",
                                "default": ""
                            },
                            "ssh_pty": {
                                "type": "boolean",
                                "description": "If true, a PTY will be requested for the SSH connection. This defaults to false.",
                                "default": false
                            },
                            "ssh_timeout": {
                                "type": "string",
                                "description": "The time to wait for SSH to become available. Packer uses this to determine when the machine has booted so this is usually quite long. Example value: 10m.",
                                "default": "10m"
                            },
                            "ssh_agent_auth": {
                                "type": "boolean",
                                "description": "If true, the local SSH agent will be used to authenticate connections to the source instance. No temporary keypair will be created, and the values of ssh_password and ssh_private_key_file will be ignored. The environment variable SSH_AUTH_SOCK must be set for this option to work properly.",
                                "default": false
                            },
                            "ssh_disable_agent_forwarding": {
                                "type": "boolean",
                                "description": "If true, SSH agent forwarding will be disabled. Defaults to false.",
                                "default": false
                            },
                            "ssh_handshake_attempts": {
                                "type": "integer",
                                "description": "The number of handshakes to attempt with SSH once it can connect. This defaults to 10.",
                                "default": 10
                            },
                            "ssh_bastion_host": {
                                "type": "string",
                                "description": "A bastion host to use for the actual SSH connection."
                            },
                            "ssh_bastion_port": {
                                "type": "integer",
                                "description": "The port of the bastion host. Defaults to 22.",
                                "default": 22
                            },
                            "ssh_bastion_agent_auth": {
                                "type": "boolean",
                                "description": "If true, the local SSH agent will be used to authenticate with the bastion host. Defaults to false.",
                                "default": false
                            },
                            "ssh_bastion_username": {
                                "type": "string",
                                "description": "The username to connect to the bastion host."
                            },
                            "ssh_bastion_password": {
                                "type": "string",
                                "description": "The password to use to authenticate with the bastion host."
                            },
                            "ssh_bastion_interactive": {
                                "type": "boolean",
                                "description": "If true, the keyboard-interactive used to authenticate with bastion host.",
                                "default": false
                            },
                            "ssh_bastion_private_key_file": {
                                "type": "string",
                                "description": "Path to a PEM encoded private key file to use to authenticate with the bastion host. The ~ can be used in path and will be expanded to the home directory of current user.",
                                "default": "~/.ssh/id_packer.key"
                            },
                            "ssh_file_transfer_method": {
                                "type": "string",
                                "description": "How to transfer files, Secure copy (default) or SSH File Transfer Protocol.",
                                "default": "scp",
                                "enum": ["sftp", "scp"]
                            },
                            "ssh_proxy_host": {
                                "type": "string",
                                "description": "A SOCKS proxy host to use for SSH connection"
                            },
                            "ssh_proxy_port": {
                                "type": "integer",
                                "description": "A port of the SOCKS proxy. Defaults to 1080.",
                                "default": 1080
                            },
                            "ssh_proxy_username": {
                                "type": "string",
                                "description": "The optional username to authenticate with the proxy server."
                            },
                            "ssh_proxy_password": {
                                "type": "string",
                                "description": "The optional password to use to authenticate with the proxy server."
                            },
                            "ssh_keep_alive_interval": {
                                "type": "string",
                                "description": "How often to send 'keep alive' messages to the server. Set to a negative value (-1s) to disable. Example value: 10s. Defaults to 5s.",
                                "default": "5s"
                            },
                            "ssh_read_write_timeout": {
                                "type": "string",
                                "description": "The amount of time to wait for a remote command to end. This might be useful if, for example, packer hangs on a connection after a reboot. Example: 5m. Disabled by default.",
                                "default": "5s"
                            },
                            "ssh_remote_tunnels": {
                                "type": "array",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "ssh_public_key": {
                                "type": "array"
                            },
                            "ssh_private_key": {
                                "type": "array"
                            }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Amazon Instance.",
                                "default": "amazon-instance",
                                "enum": ["amazon-instance"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Amazon Chroot.",
                                "default": "amazon-chroot",
                                "enum": ["amazon-chroot"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Amazon EBS Surrogate.",
                                "default": "amazon-ebssurrogate",
                                "enum": ["amazon-ebssurrogate"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Alicloud ECS.",
                                "default": "alicloud-ecs",
                                "enum": ["alicloud-ecs"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "required": [
                            "subscription_id", "client_id", "client_secret", "client_cert_path",
                            "client_jwt", "image_publisher", "image_offer", "image_sku",
                            "image_url", "custom_managed_image_name", "custom_managed_image_resource_group_name",
                            "capture_container_name", "capture_name_prefix", "resource_group_name",
                            "storage_account", "managed_image_name", "managed_image_resource_group_name",
                            "shared_image_gallerY-destination", "location", "temp_resource_group_name",
                            "build_resource_group_name"
                        ],
                        "properties": {
                            "type": {
                                "description": "Type is Azure ARM.",
                                "default": "azure-arm",
                                "enum": ["azure-arm"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },

                            "subscription_id": {
                                "type": "string",
                                "description": "Subscription under which the build will be performed. The service principal specified in client_id must have full access to this subscription, unless build_resource_group_name option is specified in which case it needs to have owner access to the existing resource group specified in build_resource_group_name parameter."
                            },
                            "client_id": {
                                "type": "string",
                                "description": "The Active Directory service principal associated with your builder."
                            },
                            "client_secret": {
                                "type": "string",
                                "description": "The password or secret for your service principal."
                            },
                            "client_cert_path": {
                                "type": "string",
                                "description": "The location of a PEM file containing a certificate and private key for service principal.",
                                "default": "/path/to/your/client.pem"
                            },
                            "client_jwt": {
                                "type": "string",
                                "description": "The bearer JWT assertion signed using a certificate associated with your service principal principal. See Azure Active Directory docs for more information."
                            },

                            "image_publisher": {
                                "type": "string",
                                "description": "Name of the publisher to use for your base image (Azure Marketplace Images only). See documentation for details.  CLI example az vm image list-publishers --location westus"
                            },
                            "image_offer": {
                                "type": "string",
                                "description": "Name of the publisher's offer to use for your base image (Azure Marketplace Images only). See documentation for details. CLI example az vm image list-offers --location westus --publisher Canonical",
                                "default": "Canonical"
                            },
                            "image_sku": {
                                "type": "string",
                                "description": "SKU of the image offer to use for your base image (Azure Marketplace Images only). See documentation for details. CLI example az vm image list-skus --location westus --publisher Canonical --offer UbuntuServer"
                            },
                            "image_url": {
                                "type": "string",
                                "description": "URL to a custom VHD to use for your base image. If this value is set, do not set image_publisher, image_offer, image_sku, or image_version."
                            },
                            "custom_managed_image_name": {
                                "type": "string",
                                "description": "Name of a custom managed image to use for your base image. If this value is set, do not set image_publisher, image_offer, image_sku, or image_version. If this value is set, the value custom_managed_image_resource_group_name must also be set. See documentation to learn more about managed images."
                            },
                            "custom_managed_image_resource_group_name": {
                                "type": "string",
                                "description": "Name of a custom managed image's resource group to use for your base image. If this value is set, image_publisher, image_offer, image_sku, or image_version. custom_managed_image_name must also be set. See documentation to learn more about managed images."
                            },
                            "capture_container_name": {
                                "type": "string",
                                "description": "Destination container name. Essentially the \"directory\" where your VHD will be organized in Azure.",
                                "default": "https://<storage_account>.blob.core.windows.net/system/Microsoft.Compute/Images/<capture_container_name>/<capture_name_prefix>.xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.vhd"
                            },
                            "capture_name_prefix": {
                                "type": "string",
                                "description": "VHD prefix. The final artifacts will be named PREFIX-osDisk.UUID and PREFIX-vmTemplate.UUID.",
                                "default": "PACKER"
                            },
                            "resource_group_name": {
                                "type": "string",
                                "description": "Resource group under which the final artifact will be stored.",
                                "default": "default-rg"
                            },
                            "storage_account": {
                                "type": "string",
                                "description": "Storage account under which the final artifact will be stored."
                            },
                            "managed_image_name": {
                                "type": "string",
                                "description": "Specify the managed image name where the result of the Packer build will be saved. The image name must not exist ahead of time, and will not be overwritten. If this value is set, the value managed_image_resource_group_name must also be set. See documentation to learn more about managed images."
                            },
                            "managed_image_resource_group_name": {
                                "type": "string",
                                "description": "Specify the managed image resource group name where the result of the Packer build will be saved. The resource group must already exist. If this value is set, the value managed_image_name must also be set. See documentation to learn more about managed images."
                            },
                            "shared_image_gallery_destination": {
                                "type": "object",
                                "description": "The name of the Shared Image Gallery under which the managed image will be published as an image version.",
                                "default": {
                                    "shared_image_gallery_destination": {
                                        "resource_group": "ResourceGroup",
                                        "gallery_name": "GalleryName",
                                        "image_name": "ImageName",
                                        "image_version": "1.0.0",
                                        "replication_regions": ["regionA", "regionB", "regionC"]
                                    },
                                    "managed_image_name": "TargetImageName",
                                    "managed_image_resource_group_name": "TargetResourceGroup"
                                }
                            },
                            "location": {
                                "type": "string",
                                "description": "Azure datacenter in which your VM will build. CLI example az account list-locations",
                                "default": ""
                            },
                            "build_resource_group_name": {
                                "type": "string",
                                "description": "Specify an existing resource group to run the build in."
                            },

                            "shared_image_gallery": {
                                "type": "object",
                                "description": "Use a Shared Gallery image as the source for this build. VHD targets are incompatible with this build type - the target must be a Managed Image.",
                                "default": {
                                    "shared_image_gallery": {
                                        "subscription": "00000000-0000-0000-0000-00000000000",
                                        "resource_group": "ResourceGroup",
                                        "gallery_name": "GalleryName",
                                        "image_name": "ImageName",
                                        "image_version": "1.0.0"
                                    },
                                    "managed_image_name": "TargetImageName",
                                    "managed_image_resource_group_name": "TargetResourceGroup"
                                }
                            },
                            "shared_image_gallery_timeout": {
                                "type": "string",
                                "description": "How long to wait for an image to be published to the shared image gallery before timing out. If your Packer build is failing on the Publishing to Shared Image Gallery step with the error Original Error: context deadline exceeded, but the image is present when you check your Azure dashboard, then you probably need to increase this timeout from its default of \"60m\" (valid time units include s for seconds, m for minutes, and h for hours.)",
                                "default": "60m"
                            },
                            "shared_gallery_image_version_end_of_life_date": {
                                "type": "string",
                                "description": "The end of life date (2006-01-02T15:04:05.99Z) of the gallery Image Version. This property can be used for decommissioning purposes.",
                                "default": "2026-01-02T15:04:05.99Z"
                            },
                            "shared_image_gallery_replica_count": {
                                "type": "integer",
                                "description": "The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. Replica count must be between 1 and 10.",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 10
                            },
                            "shared_gallery_image_version_exclude_from_latest": {
                                "type": "boolean",
                                "description": "If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.",
                                "default": false
                            },
                            "image_version": {
                                "type": "string",
                                "description": "Specify a specific version of an OS to boot from. Defaults to latest. There may be a difference in versions available across regions due to image synchronization latency. To ensure a consistent version across regions set this value to one that is available in all regions where you are deploying.",
                                "default": "latest"
                            },
                            "vm_size": {
                                "type": "string",
                                "description": "Size of the VM used for building. This can be changed when you deploy a VM from your VHD. See pricing information. Defaults to Standard_A1. CLI example az vm list-sizes --location westus",
                                "default": "Standard_A1"
                            },
                            "managed_image_storage_account_type": {
                                "type": "string",
                                "description": "Specify the storage account type for a managed image. Valid values are Standard_LRS and Premium_LRS. The default is Standard_LRS.",
                                "default": "Standard_LRS",
                                "enum": ["Standard_LRS", "Premium_LRS"]
                            },
                            "managed_image_os_disk_snapshot_name": {
                                "type": "string",
                                "description": "If managed_image_os_disk_snapshot_name is set, a snapshot of the OS disk is created with the same name as this value before the VM is captured."
                            },
                            "managed_image_data_disk_snapshot_prefix": {
                                "type": "string",
                                "description": "If managed_image_data_disk_snapshot_prefix is set, snapshot of the data disk(s) is created with the same prefix as this value before the VM is captured."
                            },
                            "managed_image_zone_resilient": {
                                "type": "boolean",
                                "description": "Store the image in zone-resilient storage. You need to create it in a region that supports availability zones.",
                                "default": false
                            },
                            "azure_tags": {
                                "type": "object",
                                "description": "Map Name/value pair tags to apply to every resource deployed i.e. Resource Group, VM, NIC, VNET, Public IP, KeyVault, etc. The user can define up to 15 tags. Tag names cannot exceed 512 characters, and tag values cannot exceed 256 characters.",
                                "default": {
                                    "tag": "value"
                                }
                            },
                            "azure_tag": {
                                "type": "array",
                                "description": "Same as azure_tags but defined as a singular repeatable block containing a name and a value field. In HCL2 mode the dynamic_block will allow you to create those programatically.",
                                "default": [{ "tag": "value" }]
                            },
                            "temp_compute_name": {
                                "type": "string",
                                "description": "Temporary name assigned to the VM. If this value is not set, a random value will be assigned. Knowing the resource group and VM name allows one to execute commands to update the VM during a Packer build, e.g. attach a resource disk to the VM.",
                                "default": "yourtempcompute"
                            },
                            "temp_resource_group_name": {
                                "type": "string",
                                "description": "name assigned to the temporary resource group created during the build. If this value is not set, a random value will be assigned. This resource group is deleted at the end of the build.",
                                "default": "yourtempgroup"
                            },
                            "build_key_vault_sku": {
                                "type": "string",
                                "description": "Specify an existing key vault to use for uploading certificates to the instance to connect.",
                                "default": "yourKeyVault"
                            },
                            "private_virtual_network_with_public_ip": {
                                "type": "boolean",
                                "description": "Specify the KeyVault SKU to create during the build. Valid values are standard or premium. The default value is standard.",
                                "default": false
                            },
                            "virtual_network_name": {
                                "type": "string",
                                "description": "Use a pre-existing virtual network for the VM. This option enables private communication with the VM, no public IP address is used or provisioned (unless you set private_virtual_network_with_public_ip)."
                            },
                            "virtual_network_subnet_name": {
                                "type": "string",
                                "description": "If virtual_network_name is set, this value may also be set. If virtual_network_name is set, and this value is not set the builder attempts to determine the subnet to use with the virtual network. If the subnet cannot be found, or it cannot be disambiguated, this value should be set."
                            },
                            "virtual_network_resource_group_name": {
                                "type": "string",
                                "description": "If virtual_network_name is set, this value may also be set. If virtual_network_name is set, and this value is not set the builder attempts to determine the resource group containing the virtual network. If the resource group cannot be found, or it cannot be disambiguated, this value should be set."
                            },
                            "custom_data_file": {
                                "type": "string",
                                "description": "Specify a file containing custom data to inject into the cloud-init process. The contents of the file are read and injected into the ARM template. The custom data will be passed to cloud-init for processing at the time of provisioning. See documentation to learn more about custom data, and how it can be used to influence the provisioning process."
                            },
                            "plan_info": {
                                "type": "object",
                                "description": "Used for creating images from Marketplace images. Please refer to Deploy an image with Marketplace terms for more details. Not all Marketplace images support programmatic deployment, and support is controlled by the image publisher.",
                                "default": {
                                    "plan_name": "rabbitmq",
                                    "plan_product": "rabbitmq",
                                    "plan_publisher": "bitnami"
                                }
                            },
                            "polling_duration_timeout": {
                                "type": "string",
                                "description": "The default PollingDuration for azure is 15mins, this property will override that value. See Azure DefaultPollingDuration If your Packer build is failing on the ARM deployment step with the error Original Error: context deadline exceeded, then you probably need to increase this timeout from its default of \"15m\" (valid time units include s for seconds, m for minutes, and h for hours.)",
                                "default": "15m"
                            },
                            "os_type": {
                                "type": "string",
                                "description": "If either Linux or Windows is specified Packer will automatically configure authentication credentials for the provisioned machine. For Linux this configures an SSH authorized key. For Windows this configures a WinRM certificate.",
                                "default": "Windows",
                                "enum": ["Linux", "Windows"]
                            },
                            "os_disk_size_gb": {
                                "type": "integer",
                                "description": "Specify the size of the OS disk in GB (gigabytes). Values of zero or less than zero are ignored.",
                                "default": 10,
                                "minimum": 1
                            },
                            "disk_additional_size": {
                                "type": "array",
                                "description": "The size(s) of any additional hard disks for the VM in gigabytes. If this is not specified then the VM will only contain an OS disk. The number of additional disks and maximum size of a disk depends on the configuration of your VM. See Windows or Linux for more information.",
                                "default": [10, 10],
                                "items": {
                                    "type": "integer",
                                    "default": 10,
                                    "minimum": 1
                                }
                            },
                            "disk_caching_type": {
                                "type": "string",
                                "description": "Specify the disk caching type. Valid values are None, ReadOnly, and ReadWrite. The default value is ReadWrite.",
                                "default": "ReadWrite",
                                "enum": ["None", "ReadOnly", "ReadWrite"]
                            },
                            "allowed_inbound_ip_addresses": {
                                "type": "array",
                                "description": "Specify the list of IP addresses and CIDR blocks that should be allowed access to the VM. If provided, an Azure Network Security Group will be created with corresponding rules and be bound to the subnet of the VM. Providing allowed_inbound_ip_addresses in combination with virtual_network_name is not allowed.",
                                "default": ["0.0.0.0/0"],
                                "items": {
                                    "type": "string",
                                    "default": "0.0.0.0/0"
                                }
                            },
                            "boot_diag_storage_account": {
                                "type": "string",
                                "description": "Specify storage to store Boot Diagnostics -- Enabling this option will create 2 Files in the specified storage account. (serial console log & screehshot file) once the build is completed, it has to be removed manually. see here for more info"
                            },
                            "custom_resource_build_prefix": {
                                "type": "string",
                                "description": "Specify custom azure resource names during build limited to max 10 charcters this will set the prefix for the resources. The actuall resource names will be custom_resource_build_prefix + resourcetype + 5 character random alphanumeric string"
                            },
                            "async_resourcegroup_delete": {
                                "type": "boolean",
                                "description": "If you want packer to delete the temporary resource group asynchronously set this value. It's a boolean value and defaults to false. Important Setting this true means that your builds are faster, however any failed deletes are not reported.",
                                "default": true
                            },
                            "cloud_environment_name": {
                                "type": "string",
                                "description": "One of Public, China, Germany, or USGovernment. Defaults to Public. Long forms such as USGovernmentCloud and AzureUSGovernmentCloud are also supported.",
                                "default": "Public",
                                "enum": ["Public", "China", "Germany", "USGovernment"]
                            },
                            "object_id": {
                                "type": "string",
                                "description": "The object ID for the AAD SP. Optional, will be derived from the oAuth token if left empty.",
                                "default": ""
                            },
                            "tenant_id": {
                                "type": "string",
                                "description": "The Active Directory tenant identifier with which your client_id and subscription_id are associated. If not specified, tenant_id will be looked up using subscription_id."
                            }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Azure Chroot.",
                                "default": "azure-chroot",
                                "enum": ["azure-chroot"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is CloudStack.",
                                "default": "cloudstack",
                                "enum": ["cloudstack"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is DigitalOcean.",
                                "default": "digitalocean",
                                "enum": ["digitalocean"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "required": ["target"],
                        "properties": {
                            "type": {
                                "description": "Type is file.",
                                "default": "file",
                                "enum": ["file"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },

                            "target": {
                                "type": "string",
                                "description": "The path for a file which will be copied as the artifact."
                            },
                            "source": {
                                "type": "string",
                                "description": "The path for a file which will be copied as the artifact."
                            },
                            "content": {
                                "type": "string",
                                "description": "The content that will be put into the artifact."
                            }
                        }
                    }, {
                        "type": "object",
                        "required": ["project_id", "source_image", "source_image_family", "zone"],
                        "properties": {
                            "type": {
                                "description": "Type is Google Compute.",
                                "default": "googlecompute",
                                "enum": ["googlecompute"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },

                            "project_id": {
                                "type": "string",
                                "description": "The project ID that will be used to launch instances and store images."
                            },
                            "source_image": {
                                "type": "string",
                                "description": "",
                                "default": "rhel-8-v20200521"
                            },
                            "source_image_family": {
                                "type": "string",
                                "description": "The source image to use to create the new image from. You can also specify source_image_family instead. If both source_image and source_image_family are specified, source_image takes precedence.",
                                "default": "rhel-8",
                                "enum": [
                                    "centos-6", "centos-7", "centos-8",
                                    "cos-81-lts", "cos-77-lts", "cos-73-lts", "cos-69-lts",
                                    "cos-stable", "cos_beta", "cos-dev",
                                    "coreos-stable", "coreos-beta", "coreos-alpha",
                                    "debian-9", "debian-10",
                                    "rhel-6", "rhel-7", "rhel-8",
                                    "rhel-7-7-sap-ha", "rhel-7-6-sap-ha", "rhel-7-4-sap",
                                    "sles-12", "sles15",
                                    "sles-15-sp1-sap", "sles-15-sap",
                                    "sles-12-sp2-sap", "sles-12-sp3-sap", "sles-12-sp4-sap", "sles-12-sp5-sap",
                                    "ubuntu-2004-lts", "ubuntu-minimal-2004-lts",
                                    "ubuntu-1910", "ubuntu-minimal-1910",
                                    "ubuntu-1804-lts", "ubuntu-minimal-1804-lts",
                                    "ubuntu-1604-lts", "ubuntu-minimal-1604-lts",
                                    "windows-2016", "windows-2016-core",
                                    "windows-2012-r2", "windows-2012-r2-core",
                                    "sql-ent-2019-win-2019", "sql-std-2019-win-2019", "sql-web-2019-win-2019",
                                    "sql-ent-2017-win-2016", "sql-exp-2017-win-2016", "sql-std-2017-win-2016",
                                    "sql-web-2017-win-2016", "sql-exp-2017-win-2012-r2",
                                    "sql-ent-2016-win-2016", "sql-std-2016-win-2016", "sql-web-2016-win-2016",
                                    "sql-ent-2016-win-2012-r2", "sql-std-2016-win-2012-r2", "sql-web-2016-win-2012-r2",
                                    "sql-ent-2014-win-2016",
                                    "sql-ent-2014-win-2012-r2", "sql-std-2014-win-2012-r2", "sql-web-2014-win-2012-r2",
                                    "sql-ent-2012-win-2012-r2", "sql-std-2012-win-2012-r2", "sql-web-2012-win-2012-r2"
                                ]
                            },
                            "zone": {
                                "type": "string",
                                "description": "The zone in which to launch the instance used to create the image.",
                                "default": "us-central1-a",
                                "enum": [
                                    "asia-east1-a", "asia-east1-b", "asia-east1-c",
                                    "asia-east2-a", "asia-east2-b", "asia-east2-c",
                                    "asia-northeast1-a", "asia-northeast1-b", "asia-northeast1-c",
                                    "asia-northeast2-a", "asia-northeast2-b", "asia-northeast2-c",
                                    "asia-northeast3-a", "asia-northeast3-b", "asia-northeast3-c",
                                    "asia-south1-a", "asia-south1-b", "asia-south1-c",
                                    "asia-southeast1-a", "asia-southeast1-b", "asia-southeast1-c",
                                    "australia-southeast1-a", "australia-southeast1-b", "australia-southeast1-c",
                                    "europe-north1-", "europe-north1-", "europe-north1-",
                                    "europe-west1-b", "europe-west1-c", "europe-west1-d",
                                    "europe-west2-a", "europe-west2-b", "europe-west2-c",
                                    "europe-west3-a", "europe-west3-b", "europe-west3-c",
                                    "europe-west4-a", "europe-west4-b", "europe-west4-c",
                                    "europe-west6-a", "europe-west6-b", "europe-west6-c",
                                    "northamerica-northeast1-a", "northamerica-northeast1-b", "northamerica-northeast1-c",
                                    "southamerica-east1-a", "southamerica-east1-b", "southamerica-east1-c",
                                    "us-central1-a", "us-central1-b", "us-central1-c", "us-central1-f",
                                    "us-east1-b", "us-east1-c", "us-east1-d",
                                    "us-east4-a", "us-east4-b", "us-east4-c",
                                    "us-west1-a", "us-west1-b", "us-west1-c",
                                    "us-west2-a", "us-west2-b", "us-west2-c",
                                    "us-west3-a", "us-west3-b", "us-west3-c",
                                    "us-west4-a", "us-west4-b", "us-west4-c"
                                ]
                            },

                            "account_file": {
                                "type": "string",
                                "description": "The JSON file containing your account credentials. Not required if you run Packer on a GCE instance with a service account. Instructions for creating the file or using service accounts are above."
                            },
                            "accelerator_type": {
                                "type": "string",
                                "description": "Full or partial URL of the guest accelerator type. GPU accelerators can only be used with \"on_host_maintenance\": \"TERMINATE\" option set.",
                                "default": "projects/project_id/zones/europe-west1-b/acceleratorTypes/nvidia-tesla-k80"
                            },
                            "accelerator_count": {
                                "type": "integer",
                                "description": "Number of guest accelerator cards to add to the launched instance.",
                                "default": 0
                            },
                            "address": {
                                "type": "string",
                                "description": "The name of a pre-allocated static external IP address. Note, must be the name and not the actual IP address."
                            },
                            "disable_default_service_account": {
                                "type": "boolean",
                                "description": "If true, the default service account will not be used if service_account_email is not specified. Set this value to true and omit service_account_email to provision a VM with no service account.",
                                "default": false
                            },
                            "disk_name": {
                                "type": "string",
                                "description": "The name of the disk, if unset the instance name will be used."
                            },
                            "disk_size": {
                                "type": "integer",
                                "description": "The size of the disk in GB. This defaults to 10, which is 10GB.",
                                "default": 10
                            },
                            "disk_type": {
                                "type": "string",
                                "description": "Type of disk used to back your instance, like pd-ssd or pd-standard. Defaults to pd-standard.",
                                "default": "pd-standard",
                                "enum": ["pd-standard", "pd-ssd"]
                            },
                            "enable_secure_boot": {
                                "type": "boolean",
                                "description": "Create a Shielded VM image with Secure Boot enabled. It helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
                                "default": true
                            },
                            "enable_vtpm": {
                                "type": "boolean",
                                "description": "Create a Shielded VM image with virtual trusted platform module Measured Boot enabled. A vTPM is a virtualized trusted platform module, which is a specialized computer chip you can use to protect objects, like keys and certificates, that you use to authenticate access to your system.",
                                "default": true
                            },
                            "enable_integrity_monitoring": {
                                "type": "boolean",
                                "description": "Integrity monitoring helps you understand and make decisions about the state of your VM instances. Note: integrity monitoring relies on having vTPM enabled.",
                                "default": true
                            },
                            "image_name": {
                                "type": "string",
                                "description": "The unique name of the resulting image. Defaults to packer-{{timestamp}}.",
                                "default": "packer-TIMESTAMP"
                            },
                            "image_description": {
                                "type": "string",
                                "description": "The description of the resulting image.",
                                "default": ""
                            },
                            "image_encryption_key": {
                                "type": "object",
                                "description": "Image encryption key to apply to the created image.",
                                "properties": {
                                    "oneOf": [{
                                        "hmsKeyName": {
                                            "type": "string",
                                            "default": "projects/${project}/locations/${region}/keyRings/computeEngine/cryptoKeys/computeEngine/cryptoKeyVersions/4"
                                        },
                                        "RawKey": {
                                            "type": "string",
                                            "default": "[YOUR 256 BIT KEY in base64]"
                                        }
                                    }]
                                },
                                "default": { "hmsKeyName": "projects/${project}/locations/${region}/keyRings/computeEngine/cryptoKeys/computeEngine/cryptoKeyVersions/4" }
                            },
                            "image_family": {
                                "type": "string",
                                "description": " The name of the image family to which the resulting image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated."
                            },
                            "image_labels": {
                                "type": "object",
                                "description": "Map of key/value pair labels to apply to the created image.",
                                "default": { "key": "value" }
                            },
                            "image_licenses": {
                                "type": "array",
                                "description": "Licenses to apply to the created image.",
                                "items": {
                                    "type": "string"
                                },
                                "default": ["YOURLICENSE1"]
                            },
                            "instance_name": {
                                "type": "string",
                                "description": "A name to give the launched instance. Beware that this must be unique. Defaults to packer-{{uuid}}.",
                                "default": "packer-UUID"
                            },
                            "labels": {
                                "type": "object",
                                "description": "Map key/value pair labels to apply to the launched instance.",
                                "default": { "key": "value" }
                            },
                            "machine_type": {
                                "type": "string",
                                "description": "The machine type. Defaults to \"n1-standard-1\".",
                                "default": "n1-standard-1"
                            },
                            "metadata": {
                                "type": "object",
                                "description": "Metadata applied to the launched instance.",
                                "default": { "key": "value" }
                            },
                            "metadata_files": {
                                "type": "object",
                                "description": "Metadata applied to the launched instance. Values are files.",
                                "default": { "key": "/path/to/your/metdata" }
                            },
                            "min_cpu_platform": {
                                "type": "string",
                                "description": "A Minimum CPU Platform for VM Instance. Availability and default CPU platforms vary across zones, based on the hardware available in each GCP zone. Details",
                                "default": "Intel Skylake",
                                "enum": ["Intel Skylake", "Intel Sandy Bridge", "Intel Ivy Bridge", "Intel Haswell", "Intel Broadwell", "Intel Cascade Lake"]
                            },
                            "network": {
                                "type": "string",
                                "description": "The Google Compute network id or URL to use for the launched instance. Defaults to \"default\". If the value is not a URL, it will be interpolated to projects/((network_project_id))/global/networks/((network)). This value is not required if a subnet is specified.",
                                "default": "default"
                            },
                            "network_project_id": {
                                "type": "string",
                                "description": "The project ID for the network and subnetwork to use for launched instance. Defaults to project_id.",
                                "default": "project_id"
                            },
                            "omit_external_ip": {
                                "type": "boolean",
                                "description": "If true, the instance will not have an external IP. use_internal_ip must be true if this property is true.",
                                "default": false
                            },
                            "on_host_maintenance": {
                                "type": "string",
                                "description": "Sets Host Maintenance Option. Valid choices are MIGRATE and TERMINATE. Please see GCE Instance Scheduling Options, as not all machine_types support MIGRATE (i.e. machines with GPUs). If preemptible is true this can only be TERMINATE. If preemptible is false, it defaults to MIGRATE",
                                "default": "MIGRATE",
                                "enum": ["MIGRATE", "TERMINATE"]
                            },
                            "preemptible": {
                                "type": "boolean",
                                "description": "If true, launch a preemptible instance.",
                                "default": false
                            },
                            "state_timeout": {
                                "type": "string",
                                "description": "The time to wait for instance state changes. Defaults to \"5m\".",
                                "default": "5m"
                            },
                            "region": {
                                "type": "string",
                                "description": "The region in which to launch the instance. Defaults to the region hosting the specified zone.",
                                "default": "us-west1",
                                "enum": ["asia-east1", "asia-east2", "asia-northeast1", "asia-northeast-2", "asia-northeast3", "asia-south1",
                                    "asia-southeast1", "australia-southeast1", "europe-north1", "europe-west1", "europe-west2", "europe-west3", "europe-west4",
                                    "europe-west6", "northamerica-northeast1", "southamerica-east1", "us-central1", "us-east1",
                                    "us-east4", "us-west1", "us-west2", "us-west3", "us-west4"
                                ]
                            },
                            "scopes": {
                                "type": "array",
                                "description": "The service account scopes for launched instance.",
                                "default": [
                                    "https://www.googleapis.com/auth/userinfo.email",
                                    "https://www.googleapis.com/auth/compute",
                                    "https://www.googleapis.com/auth/devstorage.full_control"
                                ]
                            },
                            "service_account_email": {
                                "type": "string",
                                "description": "The service account to be used for launched instance. Defaults to the project's default service account unless disable_default_service_account is true.",
                                "default": "default"
                            },
                            "source_image_project_id": {
                                "type": "array",
                                "description": "A list of project IDs to search for the source image. Packer will search the first project ID in the list first, and fall back to the next in the list, until it finds the source image.",
                                "default": ["rhel-cloud"],
                                "items": {
                                    "type": "string",
                                    "enum": ["centos-cloud", "cos-cloud", "debian-cloud", "rhel-cloud",
                                        "rhel-sap-cloud", "suse-cloud", "ubuntu-os-cloud", "windows-cloud",
                                        "windows-sql-cloud", "ubuntu-os-cloud", "OTHER(add yours)"
                                    ]
                                }
                            },
                            "startup_script_file": {
                                "type": "string",
                                "description": "The path to a startup script to run on the VM from which the image will be made.",
                                "default": "/path/inside/VM/script.sh"
                            },
                            "subnetwork": {
                                "type": "string",
                                "description": "The Google Compute subnetwork id or URL to use for the launched instance. Only required if the network has been created with custom subnetting. Note, the region of the subnetwork must match the region or zone in which the VM is launched. If the value is not a URL, it will be interpolated to projects/((network_project_id))/regions/((region))/subnetworks/((subnetwork))",
                                "default": "/projects/project_id/regions/region/subnetworks/subnetwork"
                            },
                            "tags": {
                                "type": "array",
                                "description": "Assign network tags to apply firewall rules to VM instance.",
                                "default": ["sample-tag"]
                            },
                            "use_internal_ip": {
                                "type": "boolean",
                                "description": "If true, use the instance's internal IP instead of its external IP during building.",
                                "default": true
                            },
                            "vault_gcp_oauth_engine": {
                                "type": "string",
                                "description": "Can be set instead of account_file. If set, this builder will use HashiCorp Vault to generate an Oauth token for authenticating against Google's cloud. The value should be the path of the token generator within vault. For information on how to configure your Vault + GCP engine to produce Oauth tokens, see https://www.vaultproject.io/docs/auth/gcp You must have the environment variables VAULT_ADDR and VAULT_TOKEN set, along with any other relevant variables for accessing your vault instance. For more information, see the Vault docs: https://www.vaultproject.io/docs/commands/#environment-variables",
                                "default": "vault_gcp_oauth_engine"
                            }
                        }
                    }, {
                        "type": "object",
                        "required": ["token", "image", "location", "server_type"],
                        "properties": {
                            "type": {
                                "description": "Type is Hetzner Cloud.",
                                "default": "hcloud",
                                "enum": ["hcloud"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },

                            "token": {
                                "type": "string",
                                "description": "ID or name of image to launch server from. Alternatively you can use image_filter."
                            },
                            "image": {
                                "type": "string",
                                "description": "ID or name of image to launch server from. Alternatively you can use image_filter."
                            },
                            "location": {
                                "type": "string",
                                "description": "The name of the location to launch the server in."
                            },
                            "server_type": {
                                "type": "string",
                                "description": "ID or name of the server type this server should be created with."
                            },

                            "endpoint": {
                                "type": "string",
                                "description": "",
                                "default": ""
                            },
                            "image_filter": {
                                "type": "object",
                                "description": "Filters used to populate the filter field. https://www.packer.io/docs/builders/hetzner-cloud/#image_filter"
                            },
                            "server_name": {
                                "type": "string",
                                "description": "",
                                "default": ""
                            },
                            "snapshot_name": {
                                "type": "string",
                                "description": "",
                                "default": ""
                            },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is HyperOne.",
                                "default": "hyperone",
                                "enum": ["hyperone"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Hyper-V ISO.",
                                "default": "hyperv-iso",
                                "enum": ["hyperv-iso"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Hyper-V VMCX.",
                                "default": "hyperv-vmcx",
                                "enum": ["hyperv-vmcx"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "required": ["linode_token", "image", "region", "instance_type"],
                        "properties": {
                            "type": {
                                "description": "Type is Linode.",
                                "default": "linode",
                                "enum": ["linode"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },

                            "linode_token": {
                                "type": "string",
                                "description": "The client TOKEN to use to access your account."
                            },
                            "image": {
                                "type": "string",
                                "description": "An Image ID to deploy the Disk from. Official Linode Images start with linode/, while user Images start with private/. See images for more information on the Images available for use. Examples are linode/debian9, linode/fedora28, linode/ubuntu18.04, linode/arch, and private/12345."
                            },
                            "region": {
                                "type": "string",
                                "description": "The id of the region to launch the Linode instance in. Images are available in all regions, but there will be less delay when deploying from the region where the image was taken. Examples are us-east, us-central, us-west, ap-south, ca-east, ap-northeast, eu-central, and eu-west.",
                                "default": "us-east",
                                "enum": ["us-east", "us-central", "us-west", "ap-south", "ca-east", "ap-northeast", "eu-central", "eu-west"]
                            },
                            "instance_type": {
                                "type": "string",
                                "description": "The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are g6-nanode-1, g6-standard-2, g6-highmem-16, and g6-dedicated-16.",
                                "default": "g6-standard-2"
                            },

                            "instance_label": {
                                "type": "string",
                                "description": "The name assigned to the Linode Instance."
                            },
                            "instance_tags": {
                                "type": "array",
                                "description": "Tags to apply to the instance when it is created.",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "swap_size": {
                                "type": "integer",
                                "description": "The disk size (MiB) allocated for swap space.",
                                "default": 0
                            },
                            "image_label": {
                                "type": "string",
                                "description": "The name of the resulting image that will appear in your account. Defaults to packer-{{timestamp}} (see configuration templates for more info)."
                            },
                            "image_description": {
                                "type": "string",
                                "description": "The description of the resulting image that will appear in your account. Defaults to ''."
                            },
                            "state_timeout": {
                                "type": "string",
                                "description": "The time to wait, as a duration string, for the Linode instance to enter a desired state (such as 'running') before timing out. The default state timeout is '5m'.",
                                "default": "5m"
                            }
                        }
                    }, {
                        "type": "object",
                        "required": ["config_file", "template_name", "template_environment_vars"],
                        "properties": {
                            "type": {
                                "description": "Type is lxc.",
                                "default": "lxc",
                                "enum": ["lxc"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },

                            "config_file": {
                                "type": "string",
                                "description": "The path to the lxc configuration file.",
                                "default": "/path/to/config"
                            },
                            "template_name": {
                                "type": "string",
                                "description": "The LXC template name to use.",
                                "default": ""
                            },
                            "template_environment_vars": {
                                "type": "array",
                                "description": "Environmental variables to use to build the template with.",
                                "items": { "type": "string" }
                            },

                            "target_runlevel": {
                                "type": "integer",
                                "description": "If you're using runlevels instead of SystemD targets, specify it here.",
                                "minimum": 1,
                                "maximum": 5,
                                "default": 3
                            },
                            "output_directory": {
                                "type": "string",
                                "description": "The directory in which to save the exported tar.gz. Defaults to output-<BuildName> in the current directory."
                            },
                            "container_name": {
                                "type": "string",
                                "description": "The name of the LXC container. Usually stored in /var/lib/lxc/containers/<container_name>. Defaults to packer-<BuildName>.",
                                "default": "packer-BUILDNAME"
                            },
                            "command_wrapper": {
                                "type": "string",
                                "description": "Allows you to specify a wrapper command, such as ssh so you can execute packer builds on a remote host. Defaults to Empty.",
                                "default": ""
                            },
                            "init_timeout": {
                                "type": "string",
                                "description": "The timeout in seconds to wait for the the container to start. Defaults to 20 seconds.",
                                "default": "20s"
                            },
                            "template_parameters": {
                                "type": "array",
                                "description": "Options to pass to the given lxc-template command, usually located in /usr/share/lxc/templates/lxc-<template_name>. Note: This gets passed as ARGV to the template command. Ensure you have an array of strings, as a single string with spaces probably won't work. Defaults to [].",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "create_options": {
                                "type": "array",
                                "description": "Options to pass to lxc-create. For instance, you can specify a custom LXC container configuration file with ['-f', '/path/to/lxc.conf']. Defaults to []. See man 1 lxc-create for available options.",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "start_options": {
                                "type": "array",
                                "description": "Options to pass to lxc-start. For instance, you can override parameters from the LXC container configuration file via ['--define', 'KEY=VALUE']. Defaults to []. See man 1 lxc-start for available options.",
                                "items": { "type": "string" },
                                "default": [""]
                            },
                            "attach_options": {
                                "type": "array",
                                "description": "Options to pass to lxc-attach. For instance, you can prevent the container from inheriting the host machine's environment by specifying [\"--clear-env\"]. Defaults to []. See man 1 lxc-attach for available options.",
                                "items": { "type": "string" },
                                "default": [""]
                            }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is LXD.",
                                "default": "lxd",
                                "enum": ["lxd"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Naver Cloud Platform.",
                                "default": "ncloud",
                                "enum": ["ncloud"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is NULL.",
                                "default": "null",
                                "enum": ["null"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is 1&1.",
                                "default": "oneandone",
                                "enum": ["oneandone"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is OpenStack.",
                                "default": "openstack",
                                "enum": ["openstack"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Oracle Classic.",
                                "default": "oracle-classic",
                                "enum": ["oracle-classic"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Oracle OCI.",
                                "default": "oracle-oci",
                                "enum": ["oracle-oci"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Outscale BSU.",
                                "default": "osc-bsu",
                                "enum": ["osc-bsu"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Outscale Chroot.",
                                "default": "osc-chroot",
                                "enum": ["osc-chroot"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Outscale BSU Surrogate.",
                                "default": "osc-bsusurrogate",
                                "enum": ["osc-bsusurrogate"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Outscale BSU Volume.",
                                "default": "osc-bsuvolume",
                                "enum": ["osc-bsuvolume"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Parallels Desktop for Mac ISO.",
                                "default": "parallels-iso",
                                "enum": ["parallels-iso"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Parallels Desktop for Mac PVM.",
                                "default": "parallels-pvm",
                                "enum": ["parallels-pvm"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is ProfitBricks.",
                                "default": "profitbricks",
                                "enum": ["profitbricks"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is ProxMox.",
                                "default": "proxmox",
                                "enum": ["proxmox"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Scaleway.",
                                "default": "scaleway",
                                "enum": ["scaleway"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Tencent.",
                                "default": "tencentcloud-cvm",
                                "enum": ["tencentcloud-cvm"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is JDCloud.",
                                "default": "jdcloud",
                                "enum": ["jdcloud"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Triton.",
                                "default": "triton",
                                "enum": ["triton"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is UCloud.",
                                "default": "ucloud-uhost",
                                "enum": ["ucloud-uhost"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Vagrant.",
                                "default": "vagrant",
                                "enum": ["vagrant"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }, {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is VirtualBox ISO",
                                "default": "virtualbox-iso",
                                "enum": ["virtualbox-iso"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "disk_size": {
                                "type": "integer",
                                "description": "The size, in megabytes, of the hard disk to create for the VM. By default, this is 40000 (about 40 GB).",
                                "default": 40000
                            },
                            "guest_additions_mode": {
                                "type": "string",
                                "description": "The method by which guest additions are made available to the guest for installation. Valid options are upload, attach, or disable. If the mode is attach the guest additions ISO will be attached as a CD device to the virtual machine. If the mode is upload the guest additions ISO will be uploaded to the path specified by guest_additions_path. The default value is upload. If disable is used, guest additions won't be downloaded, either.",
                                "default": "disable",
                                "enum": ["upload", "attach", "disable"]
                            },
                            "guest_additions_path": {
                                "type": "string",
                                "description": "The path on the guest virtual machine where the VirtualBox guest additions ISO will be uploaded. By default this is VBoxGuestAdditions.iso which should upload into the login directory of the user. This is a configuration template where the {{ .Version }} variable is replaced with the VirtualBox version.",
                                "default": "/path/to/guest/additions.iso"
                            },
                            "guest_additions_sha256": {
                                "type": "string",
                                "description": "The SHA256 checksum of the guest additions ISO that will be uploaded to the guest VM. By default the checksums will be downloaded from the VirtualBox website, so this only needs to be set if you want to be explicit about the checksum.",
                                "default": ""
                            },
                            "guest_additions_url": {
                                "type": "string",
                                "description": "The URL to the guest additions ISO to upload. This can also be a file URL if the ISO is at a local path. By default, the VirtualBox builder will attempt to find the guest additions ISO on the local file system. If it is not available locally, the builder will download the proper guest additions ISO from the internet. This is a template engine, and you have access to the variable {{ .Version }}.",
                                "default": "https://download.virtualbox.org/virtualbox/6.1.10/VBoxGuestAdditions_6.1.10.iso"
                            },
                            "guest_additions_interface": {
                                "type": "string",
                                "description": "The interface type to use to mount guest additions when guest_additions_mode is set to attach. Will default to the value set in iso_interface, if iso_interface is set. Will default to \"ide\", if iso_interface is not set. Options are \"ide\" and \"sata\".",
                                "default": "sata",
                                "enum": ["ide", "scsi", "sata", "pcie"]
                            },
                            "guest_os_type": {
                                "type": "string",
                                "description": "The guest OS type being installed. By default this is other, but you can get dramatic performance improvements by setting this to the proper value. To view all available values for this run VBoxManage list ostypes. Setting the correct value hints to VirtualBox how to optimize the virtual hardware to work best with that operating system.",
                                "default": "other"
                            },
                            "hard_drive_discard": {
                                "type": "boolean",
                                "description": "When this value is set to true, a VDI image will be shrunk in response to the trim command from the guest OS. The size of the cleared area must be at least 1MB. Also set hard_drive_nonrotational to true to enable TRIM support.",
                                "default": true
                            },
                            "hadr_drive_interface": {
                                "type": "string",
                                "description": "The type of controller that the primary hard drive is attached to, defaults to ide. When set to sata, the drive is attached to an AHCI SATA controller. When set to scsi, the drive is attached to an LsiLogic SCSI controller. When set to pcie, the drive is attached to an NVMe controller. Please note that when you use \"pcie\", you'll need to have Virtualbox 6, install an extension pack and you will need to enable EFI mode for nvme to work.",
                                "default": "sata",
                                "enum": ["ide", "scsi", "sata", "pcie"]
                            },
                            "sata_port_count": {
                                "type": "integer",
                                "description": "The number of ports available on any SATA controller created, defaults to 1. VirtualBox supports up to 30 ports on a maximum of 1 SATA controller. Increasing this value can be useful if you want to attach additional drives.",
                                "default": 1
                            },
                            "nvme_port_count": {
                                "type": "integer",
                                "description": "The number of ports available on any NVMe controller created, defaults to 1. VirtualBox supports up to 255 ports on a maximum of 1 NVMe controller. Increasing this value can be useful if you want to attach additional drives.",
                                "default": 1
                            },
                            "hard_drive_nonrotational": {
                                "type": "boolean",
                                "description": "Forces some guests (i.e. Windows 7+) to treat disks as SSDs and stops them from performing disk fragmentation. Also set hard_drive_discard to true to enable TRIM support.",
                                "default": true
                            },
                            "iso_interface": {
                                "type": "string",
                                "description": "The type of controller that the ISO is attached to, defaults to ide. When set to sata, the drive is attached to an AHCI SATA controller.",
                                "default": "ide",
                                "enum": ["ide", "scsi", "sata", "pcie"]
                            },
                            "iso_url": {
                                "type": "string",
                                "description": "A URL to the ISO containing the installation image or virtual hard drive (VHD or VHDX) file to clone.",
                                "default": "https://distro/media.iso"
                            },
                            "iso_checksum": {
                                "type": "string",
                                "description": "The checksum for the ISO file or virtual hard drive file. The type of the checksum is specified within the checksum field as a prefix, ex: \"md5:{$checksum}\".",
                                "default": "none"
                            },
                            "keep_registered": {
                                "type": "boolean",
                                "description": "Set this to true if you would like to keep the VM registered with virtualbox. Defaults to false.",
                                "default": false
                            },
                            "skip_export": {
                                "type": "boolean",
                                "description": "Defaults to false. When enabled, Packer will not export the VM. Useful if the build output is not the resultant image, but created inside the VM.",
                                "default": false
                            },
                            "vm_name": {
                                "type": "string",
                                "description": "This is the name of the OVF file for the new virtual machine, without the file extension. By default this is packer-BUILDNAME, where \"BUILDNAME\" is the name of the build.",
                                "default": "packer-BUILDNAME"
                            },
                            "virtualbox_version_file": {
                                "type": "string",
                                "description": "The path within the virtual machine to upload a file that contains the VirtualBox version that was used to create the machine. This information can be useful for provisioning. By default this is .vbox_version, which will generally be upload it into the home directory. Set to an empty string to skip uploading this file, which can be useful when using the none communicator.",
                                "default": "/path/in/vm/to/version.file"
                            },
                            "bundle_iso": {
                                "type": "boolean",
                                "description": "Defaults to false. When enabled, Packer includes any attached ISO disc devices into the final virtual machine. Useful for some live distributions that require installation media to continue to be attached after installation.",
                                "default": false
                            },
                            "http_directory": {
                                "type": "string",
                                "description": "Path to a directory to serve using an HTTP server. The files in this directory will be available over HTTP that will be requestable from the virtual machine. This is useful for hosting kickstart files and so on. By default this is an empty string, which means no HTTP server will be started. The address and port of the HTTP server will be available as variables in boot_command. This is covered in more detail below.",
                                "default": "/path/to/http"
                            },
                            "http_port_min": {
                                "type": "integer",
                                "description": "These are the minimum and maximum port to use for the HTTP server started to serve the http_directory. Because Packer often runs in parallel, Packer will choose a randomly available port in this range to run the HTTP server. If you want to force the HTTP server to be on one port, make this minimum and maximum port the same. By default the values are 8000 and 9000, respectively.",
                                "default": 8000
                            },
                            "http_port_max": {
                                "type": "integer",
                                "description": "These are the minimum and maximum port to use for the HTTP server started to serve the http_directory. Because Packer often runs in parallel, Packer will choose a randomly available port in this range to run the HTTP server. If you want to force the HTTP server to be on one port, make this minimum and maximum port the same. By default the values are 8000 and 9000, respectively.",
                                "default": 9000
                            },
                            "http_bind_address": {
                                "type": "string",
                                "description": "This is the bind address for the HTTP server. Defaults to 0.0.0.0 so that it will work with any network interface.",
                                "default": "0.0.0.0"
                            },
                            "floppy_files": {
                                "type": "array",
                                "description": "A list of files to place onto a floppy disk that is attached when the VM is booted. Currently, no support exists for creating sub-directories on the floppy. Wildcard characters (\\*, ?, and []) are allowed. Directory names are also allowed, which will add all the files found in the directory to the floppy.",
                                "default": ["/path/to/file"],
                                "items": { "type": "string" }
                            },
                            "floppy_dirs": {
                                "type": "array",
                                "description": "A list of directories to place onto a floppy disk that is attached when the VM is booted. Currently, no support exists for creating sub-directories on the floppy. Wildcard characters (\\*, ?, and []) are allowed. Directory names are also allowed, which will add all the files found in the directory to the floppy.",
                                "default": ["/path/to/dir/"],
                                "items": { "type": "string" }
                            },
                            "floppy_label": {
                                "type": "string",
                                "description": "Floppy Label",
                                "default": "FlippyMcFlopFace"
                            },
                            "format": {
                                "type": "string",
                                "description": "Either ovf or ova, this specifies the output format of the exported virtual machine. This defaults to ovf.",
                                "default": "ovf",
                                "enum": ["ova", "ovf"]
                            },
                            "": {
                                "type": "string",
                                "description": "",
                                "default": ""
                            },
                            "export_opts": {
                                "type": "array",
                                "description": "Additional options to pass to the VBoxManage export. This can be useful for passing product information to include in the resulting appliance file.",
                                "default": ["--manifest", "--vsys", "0", "etc..."]
                            },
                            "output_directory": {
                                "type": "string",
                                "description": "This is the path to the directory where the resulting virtual machine will be created. This may be relative or absolute. If relative, the path is relative to the working directory when packer is executed. This directory must not exist or be empty prior to running the builder. By default this is output-BUILDNAME where \"BUILDNAME\" is the name of the build.",
                                "default": "output-BUILDNAME"
                            },
                            "output_filename": {
                                "type": "string",
                                "description": "This is the base name of the file (excluding the file extension) where the resulting virtual machine will be created. By default this is the vm_name.",
                                "default": "vm_name"
                            },
                            "headless": {
                                "type": "boolean",
                                "description": "Packer defaults to building VirtualBox virtual machines by launching a GUI that shows the console of the machine being built. When this value is set to true, the machine will start without a console.",
                                "default": true
                            },
                            "vrdp_bind_address": {
                                "type": "string",
                                "description": "The IP address that should be binded to for VRDP. By default packer will use 127.0.0.1 for this. If you wish to bind to all interfaces use 0.0.0.0.",
                                "default": "127.0.0.1"
                            },
                            "vrdp_port_min": {
                                "type": "integer",
                                "description": "The minimum and maximum port to use for VRDP access to the virtual machine. Packer uses a randomly chosen port in this range that appears available. By default this is 5900",
                                "default": 5900
                            },
                            "vrdp_port_max": {
                                "type": "integer",
                                "description": "The minimum and maximum port to use for VRDP access to the virtual machine. Packer uses a randomly chosen port in this range that appears available. By default this is 5900",
                                "default": 99999
                            },
                            "shutdown_command": {
                                "type": "string",
                                "description": "The command to use to gracefully shut down the machine once all the provisioning is done. By default this is an empty string, which tells Packer to just forcefully shut down the machine unless a shutdown command takes place inside script so this may safely be omitted. If one or more scripts require a reboot it is suggested to leave this blank since reboots may fail and specify the final shutdown command in your last script.",
                                "default": "shutdown -P now"
                            },
                            "shutdown_timeout": {
                                "type": "string",
                                "description": "The amount of time to wait after executing the shutdown_command for the virtual machine to actually shut down. If it doesn't shut down in this time, it is an error. By default, the timeout is 5m or five minutes.",
                                "default": "20m"
                            },
                            "post_shutdown_delay": {
                                "type": "string",
                                "description": "The amount of time to wait after shutting down the virtual machine. If you get the error Error removing floppy controller, you might need to set this to 5m or so. By default, the delay is 0s or disabled.",
                                "default": "0s"
                            },
                            "disable_shutdown": {
                                "type": "boolean",
                                "description": "Packer normally halts the virtual machine after all provisioners have run when no shutdown_command is defined. If this is set to true, Packer will not halt the virtual machine but will assume that you will send the stop signal yourself through the preseed.cfg or your final provisioner. Packer will wait for a default of 5 minutes until the virtual machine is shutdown. The timeout can be changed using shutdown_timeout option.",
                                "default": false
                            },
                            "acpi_shutdown": {
                                "type": "boolean",
                                "description": "If it's set to true, it will shutdown the VM via power button. It could be a good option when keeping the machine state is necessary after shutting it down.",
                                "default": false
                            },
                            "cpus": {
                                "type": "integer",
                                "description": "The number of cpus to use for building the VM. Defaults to 1.",
                                "default": 1
                            },
                            "memory": {
                                "type": "integer",
                                "description": "The amount of memory to use for building the VM in megabytes. Defaults to 512 megabytes.",
                                "default": 512
                            },
                            "sound": {
                                "type": "string",
                                "description": "Defaults to none. The type of audio device to use for sound when building the VM. Some of the options that are available are dsound, oss, alsa, pulse, coreaudio, null.",
                                "default": "none",
                                "enum": ["none", "dsound", "oss", "alsa", "pulse", "coreaudio", "null"]
                            },
                            "usb": {
                                "type": "boolean",
                                "description": "Specifies whether or not to enable the USB bus when building the VM. Defaults to false.",
                                "default": false
                            },
                            "vboxmanage": {
                                "type": "array",
                                "description": "Custom VBoxManage commands to execute in order to further customize the virtual machine being created. The value of this is an array of commands to execute. The commands are executed in the order defined in the template. For each command, the command is defined itself as an array of strings, where each string represents a single argument on the command-line to VBoxManage (but excluding VBoxManage itself). Each arg is treated as a configuration template, where the Name variable is replaced with the VM name. More details on how to use VBoxManage are below.",
                                "default": [""],
                                "items": { "type": "string" }
                            },
                            "vboxmanage_post": {
                                "type": "array",
                                "description": "Identical to vboxmanage, except that it is run after the virtual machine is shutdown, and before the virtual machine is exported.",
                                "default": [""],
                                "items": { "type": "string" }
                            },
                            "pause_before_connecting": {
                                "type": "string",
                                "description": "We recommend that you enable SSH or WinRM as the very last step in your guest's bootstrap script, but sometimes you may have a race condition where you need Packer to wait before attempting to connect to your guest.",
                                "default": "5s"
                            },
                            "ssh_username": {
                                "type": "string",
                                "description": "User to connect with communicator type SSH.",
                                "default": "root"
                            },
                            "host_port_min": {
                                "type": "integer",
                                "description": "The minimum port to use for the Communicator port on the host machine which is forwarded to the SSH or WinRM port on the guest machine. By default this is 2222.",
                                "default": 2222
                            },
                            "host_port_max": {
                                "type": "integer",
                                "description": "The maximum port to use for the Communicator port on the host machine which is forwarded to the SSH or WinRM port on the guest machine. Because Packer often runs in parallel, Packer will choose a randomly available port in this range to use as the host port. By default this is 4444.",
                                "default": 4444
                            },
                            "skip_nat_mapping": {
                                "type": "boolean",
                                "description": "Defaults to false. When enabled, Packer does not setup forwarded port mapping for communicator (SSH or WinRM) requests and uses ssh_port or winrm_port on the host to communicate to the virtual machine.",
                                "default": false
                            },
                            "ssh_host": {
                                "type": "string",
                                "description": "The address to SSH to. This usually is automatically configured by the builder.",
                                "default": ""
                            },
                            "ssh_port": {
                                "type": "integer",
                                "description": "The port to connect to SSH. This defaults to 22.",
                                "default": 22
                            },
                            "ssh_keypair_name": {
                                "type": "string",
                                "description": "If specified, this is the key that will be used for SSH with the machine. The key must match a key pair name loaded up into the remote. By default, this is blank, and Packer will generate a temporary keypair unless ssh_password is used. ssh_private_key_file or ssh_agent_auth must be specified when ssh_keypair_name is utilized.",
                                "default": ""
                            },
                            "temporary_key_pair_name": {
                                "type": "string",
                                "description": "The name of the temporary key pair to generate. By default, Packer generates a name that looks like packer_<UUID>, where <UUID> is a 36 character unique identifier.",
                                "default": ""
                            },
                            "ssh_clear_authorized_keys": {
                                "type": "boolean",
                                "description": "If true, Packer will attempt to remove its temporary key from ~/.ssh/authorized_keys and /root/.ssh/authorized_keys. This is a mostly cosmetic option, since Packer will delete the temporary private key from the host system regardless of whether this is set to true (unless the user has set the -debug flag). Defaults to \"false\"; currently only works on guests with sed installed.",
                                "default": false
                            },
                            "ssh_private_key_file": {
                                "type": "string",
                                "description": "Path to a PEM encoded private key file to use to authenticate with SSH. The ~ can be used in path and will be expanded to the home directory of current user.",
                                "default": "/path/to/your/cert.pem"
                            },
                            "ssh_pty": {
                                "type": "boolean",
                                "description": "If true, a PTY will be requested for the SSH connection. This defaults to false.",
                                "default": false
                            },
                            "ssh_timeout": {
                                "type": "string",
                                "description": "The time to wait for SSH to become available. Packer uses this to determine when the machine has booted so this is usually quite long. Example value: 10m.",
                                "default": "10m"
                            },
                            "ssh_agent_auth": {
                                "type": "boolean",
                                "description": "If true, the local SSH agent will be used to authenticate connections to the source instance. No temporary keypair will be created, and the values of ssh_password and ssh_private_key_file will be ignored. The environment variable SSH_AUTH_SOCK must be set for this option to work properly.",
                                "default": false
                            },
                            "ssh_agent_forwarding": {
                                "type": "boolean",
                                "description": "If true, SSH agent forwarding will be disabled. Defaults to false.",
                                "default": false
                            },
                            "ssh_handshake_attempts": {
                                "type": "integer",
                                "description": "The number of handshakes to attempt with SSH once it can connect. This defaults to 10.",
                                "default": 10
                            },
                            "ssh_bastion_host": {
                                "type": "string",
                                "description": "A bastion host to use for the actual SSH connection.",
                                "default": ""
                            },
                            "ssh_bastion_port": {
                                "type": "integer",
                                "description": "The port of the bastion host. Defaults to 22.",
                                "default": 22
                            },
                            "ssh_bastion_agent_auth": {
                                "type": "boolean",
                                "description": "If true, the local SSH agent will be used to authenticate with the bastion host. Defaults to false.",
                                "default": false
                            },
                            "ssh_bastion_username": {
                                "type": "string",
                                "description": "The username to connect to the bastion host.",
                                "default": ""
                            },
                            "ssh_bastion_password": {
                                "type": "string",
                                "description": "The password to use to authenticate with the bastion host.",
                                "default": ""
                            },
                            "ssh_bastion_interactive": {
                                "type": "boolean",
                                "description": "If true, the keyboard-interactive used to authenticate with bastion host.",
                                "default": false
                            },
                            "ssh_bastion_private_key_file": {
                                "type": "string",
                                "description": "Path to a PEM encoded private key file to use to authenticate with the bastion host. The ~ can be used in path and will be expanded to the home directory of current user.",
                                "default": ""
                            },
                            "ssh_file_transfer_method": {
                                "type": "string",
                                "description": "How to transfer files, Secure copy (default) or SSH File Transfer Protocol.",
                                "default": "scp",
                                "enum": ["sftp", "scp"]
                            },
                            "ssh_proxy_host": {
                                "type": "string",
                                "description": "A SOCKS proxy host to use for SSH connection",
                                "default": ""
                            },
                            "ssh_proxy_port": {
                                "type": "integer",
                                "description": "A port of the SOCKS proxy. Defaults to 1080.",
                                "default": 1080
                            },
                            "ssh_proxy_username": {
                                "type": "string",
                                "description": "The optional username to authenticate with the proxy server.",
                                "default": ""
                            },
                            "ssh_proxy_password": {
                                "type": "string",
                                "description": "The optional password to use to authenticate with the proxy server.",
                                "default": ""
                            },
                            "ssh_keep_alive_interval": {
                                "type": "string",
                                "description": "How often to send \"keep alive\" messages to the server. Set to a negative value (-1s) to disable. Example value: 10s. Defaults to 5s.",
                                "default": "5s"
                            },
                            "ssh_read_write_timeout": {
                                "type": "string",
                                "description": "The amount of time to wait for a remote command to end. This might be useful if, for example, packer hangs on a connection after a reboot. Example: 5m. Disabled by default.",
                                "default": "10s"
                            },
                            "ssh_remote_tunnels": {
                                "type": "array",
                                "description": "",
                                "default": [""]
                            },
                            "ssh_local_tunnels": {
                                "type": "array",
                                "description": "",
                                "default": [""]
                            },
                            "ssh_public_key": {
                                "type": "array",
                                "description": "",
                                "default": []
                            },
                            "ssh_private_key": {
                                "type": "array",
                                "description": "",
                                "default": []
                            },
                            "winrm_username": {
                                "type": "string",
                                "description": "The username to use to connect to WinRM.",
                                "default": ""
                            },
                            "winrm_password": {
                                "type": "string",
                                "description": "The password to use to connect to WinRM.",
                                "default": ""
                            },
                            "winrm_host": {
                                "type": "string",
                                "description": "The address for WinRM to connect to.",
                                "default": ""
                            },
                            "winrm_port": {
                                "type": "string",
                                "description": "The WinRM port to connect to. This defaults to 5985 for plain unencrypted connection and 5986 for SSL when winrm_use_ssl is set to true.",
                                "default": 5985
                            },
                            "winrm_timeout": {
                                "type": "string",
                                "description": "The amount of time to wait for WinRM to become available. This defaults to 30m since setting up a Windows machine generally takes a long time.",
                                "default": "30m"
                            },
                            "winrm_use_ssl": {
                                "type": "boolean",
                                "description": "If true, use HTTPS for WinRM.",
                                "default": false
                            },
                            "winrm_insecure": {
                                "type": "boolean",
                                "description": "If true, do not check server certificate chain and host name.",
                                "default": false
                            },
                            "winrm_use_ntlm": {
                                "type": "boolean",
                                "description": "If true, NTLMv2 authentication (with session security) will be used for WinRM, rather than default (basic authentication), removing the requirement for basic authentication to be enabled within the target guest. Further reading for remote connection authentication can be found here.",
                                "default": true
                            },
                            "boot_command": {
                                "type": "array",
                                "description": "Command to type on the boot menu.",
                                "default": ["<tab><wait>", " ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>"],
                                "items": { "type": "string" }
                            },
                            "boot_keygroup_interval": {
                                "type": "string",
                                "description": "Time to wait after sending a group of key pressses. The value of this should be a duration. Examples are 5s and 1m30s which will cause Packer to wait five seconds and one minute 30 seconds, respectively. If this isn't specified, a sensible default value is picked depending on the builder type.",
                                "default": "5s"
                            },
                            "boot_wait": {
                                "type": "string",
                                "description": "The time to wait after booting the initial virtual machine before typing the boot_command. The value of this should be a duration. Examples are 5s and 1m30s which will cause Packer to wait five seconds and one minute 30 seconds, respectively. If this isn't specified, the default is 10s or 10 seconds. To set boot_wait to 0s, use a negative number, such as \"-1s\"",
                                "default": "5s"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is VirtualBox OVF",
                                "default": "virtualbox-ovf",
                                "enum": ["virtualbox-ovf"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "checksum": {
                                "type": "string",
                                "description": "The checksum for the source_path file. The type of the checksum is specified within the checksum field as a prefix, ex: \"md5:{$checksum}\". The type of the checksum can also be omitted and Packer will try to infer it based on string length. Valid values are \"none\", \"{$checksum}\", \"md5:{$checksum}\", \"sha1:{$checksum}\", \"sha256:{$checksum}\", \"sha512:{$checksum}\" or \"file:{$path}\". Here is a list of valid checksum values:",
                                "default": "none"
                            },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is VirtualBox VM",
                                "default": "virtualbox-vm",
                                "enum": ["virtualbox-vm"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is VMWare ISO",
                                "default": "vmware-iso",
                                "enum": ["vmware-iso"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is VMWare VMX",
                                "default": "vmware-vmx",
                                "enum": ["vmware-vmx"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is VSphere ISO",
                                "default": "vsphere-iso",
                                "enum": ["vshpere-iso"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is VSphere Clone",
                                "default": "vsphere-clone",
                                "enum": ["vsphere-clone"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type is Yandex Compute",
                                "default": "yandex",
                                "enum": ["yandex"]
                            },
                            "communicator": { "$ref": "#/definitions/communicator" },
                            "todo": { "$ref": "#/definitions/todo" }
                        }
                    }
                ]
            }
        },
        "provisioners": {
            "type": "array",
            "default": [{ "type": "" }],
            "items": {
                "anyOf": [{
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "ansible-local",
                            "enum": ["ansible-local"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "ansible",
                            "enum": ["ansible"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "breakpoint",
                            "enum": ["breakpoint"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "chef-client",
                            "enum": ["chef-solo"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "converge",
                            "enum": ["converge"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "required": ["source", "destination", "direction"],
                    "properties": {
                        "type": {
                            "default": "file",
                            "enum": ["file"]
                        },
                        "source": {
                            "type": "string",
                            "description": "The path to a local file or directory to upload to the machine. The path can be absolute or relative. If it is relative, it is relative to the working directory when Packer is executed. If this is a directory, the existence of a trailing slash is important. Read below on uploading directories.",
                            "default": "/path/to/local/file"
                        },
                        "destination": {
                            "type": "string",
                            "description": "The path where the file will be uploaded to in the machine. This value must be a writable location and any parent directories must already exist. If the provisioning user (generally not root) cannot write to this directory, you will receive a \"Permission Denied\" error. If the source is a file, it's a good idea to make the destination a file as well, but if you set your destination as a directory, at least make sure that the destination ends in a trailing slash so that Packer knows to use the source's basename in the final upload path. Failure to do so may cause Packer to fail on file uploads. If the destination file already exists, it will be overwritten.",
                            "default": "/path/on/vm"
                        },
                        "direction": {
                            "type": "string",
                            "description": "The direction of the file transfer. This defaults to \"upload\". If it is set to \"download\" then the file \"source\" in the machine will be downloaded locally to \"destination\"",
                            "default": "upload",
                            "enum": ["upload", "download"]
                        },
                        "generated": {
                            "type": "boolean",
                            "description": "For advanced users only. If true, check the file existence only before uploading, rather than upon pre-build validation. This allows to upload files created on-the-fly. This defaults to false. We don't recommend using this feature, since it can cause Packer to become dependent on system state. We would prefer you generate your files before the Packer run, but realize that there are situations where this may be unavoidable.",
                            "default": false
                        },
                        "pause_before": { "default": "5s" },
                        "max_retries": { "default": 0 },
                        "only": { "default": [""] },
                        "override": {},
                        "timeout": { "default": "20m" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "inspec",
                            "enum": ["inspec"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "powershell",
                            "enum": ["powershell"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "puppet-masterless",
                            "enum": ["puppet-masterless"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "puppet-server",
                            "enum": ["puppet-server"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "salt-masterless",
                            "enum": ["salt-masterless"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "shell",
                            "enum": ["shell"]
                        },
                        "oneOf": [{
                            "inline": {
                                "type": "array",
                                "description": "This is an array of commands to execute. The commands are concatenated by newlines and turned into a single file, so they are all executed within the same context. This allows you to change directories in one command and use something in the directory in the next and so on. Inline scripts are the easiest way to pull off simple tasks within the machine.",
                                "items": { "type": "string" },
                                "default": ["your command1", "your command2"]
                            }
                        }, {
                            "script": {
                                "type": "string",
                                "description": "The path to a script to upload and execute in the machine. This path can be absolute or relative. If it is relative, it is relative to the working directory when Packer is executed.",
                                "default": "your command"
                            }
                        }, {
                            "scripts": {
                                "type": "array",
                                "description": "An array of scripts to execute. The scripts will be uploaded and executed in the order specified. Each script is executed in isolation, so state such as variables from one script won't carry on to the next.",
                                "items": { "type": "string" },
                                "default": ["/path/to/your/script.sh"]
                            }
                        }],
                        "binary": {
                            "type": "boolean",
                            "description": "If true, specifies that the script(s) are binary files, and Packer should therefore not convert Windows line endings to Unix line endings (if there are any). By default this is false.",
                            "default": false
                        },
                        "valid_exit_codes": {
                            "type": "array",
                            "description": "Valid exit codes for the script. By default this is just 0.",
                            "items": { "type": "integer" },
                            "default": [0]
                        },
                        "environment_vars": {
                            "type": "array",
                            "description": "An array of key/value pairs to inject prior to the execute_command. The format should be key=value. Packer injects some environmental variables by default into the environment, as well, which are covered in the section below.",
                            "items": { "type": "string" },
                            "default": ["key=value"]
                        },
                        "env_var_format": {
                            "type": "string",
                            "description": "When we parse the environment_vars that you provide, this gives us a string template to use in order to make sure that we are setting the environment vars correctly. By default it is \"%s='%s' \". When used in conjunction with use_env_var_file the default is \"export %s='%s'\n\"",
                            "default": "export %s='%s'\\n"
                        },
                        "use_env_var_file": {
                            "type": "boolean",
                            "description": "If true, Packer will write your environment variables to a tempfile and source them from that file, rather than declaring them inline in our execute_command. The default execute_command will be chmod +x {{.Path}}; . {{.EnvVarFile}} && {{.Path}}. This option is unnecessary for most cases, but if you have extra quoting in your custom execute_command, then this may be required for proper script execution. Default: false.",
                            "default": false
                        },
                        "execute_command": {
                            "type": "string",
                            "description": "The command to use to execute the script. By default this is chmod +x {{ .Path }}; {{ .Vars }} {{ .Path }}, unless the user has set \"use_env_var_file\": true -- in that case, the default execute_command is chmod +x {{.Path}}; . {{.EnvVarFile}} && {{.Path}}. This is a template engine. Therefore, you may use user variables and template functions in this field. In addition, there are three available extra variables:"
                        },
                        "expect_disconnect": {
                            "type": "boolean",
                            "description": "Defaults to false. When true, allow the server to disconnect from Packer without throwing an error. A disconnect might happen if you restart the ssh server or reboot the host.",
                            "default": false
                        },
                        "inline_shebang": {
                            "type": "string",
                            "description": "The shebang value to use when running commands specified by inline. By default, this is /bin/sh -e. If you're not using inline, then this configuration has no effect. Important: If you customize this, be sure to include something like the -e flag, otherwise individual steps failing won't fail the provisioner.",
                            "default": "/bin/sh -e"
                        },
                        "remote_folder": {
                            "type": "string",
                            "description": "The folder where the uploaded script will reside on the machine. This defaults to '/tmp'.",
                            "default": "/tmp"
                        },
                        "remote_file": {
                            "type": "string",
                            "description": "The filename the uploaded script will have on the machine. This defaults to 'script_nnn.sh'.",
                            "default": "script_nnn.sh"
                        },
                        "remote_path": {
                            "type": "string",
                            "description": "The full path to the uploaded script will have on the machine. By default this is remote_folder/remote_file, if set this option will override both remote_folder and remote_file."
                        },
                        "skip_clean": {
                            "type": "boolean",
                            "description": "If true, specifies that the helper scripts uploaded to the system will not be removed by Packer. This defaults to false (clean scripts from the system).",
                            "default": false
                        },
                        "start_retry_timeout": {
                            "type": "string",
                            "description": "The amount of time to attempt to start the remote process. By default this is 5m or 5 minutes. This setting exists in order to deal with times when SSH may restart, such as a system reboot. Set this to a higher value if reboots take a longer amount of time.",
                            "default": "5m"
                        },
                        "pause_after": {
                            "type": "string",
                            "description": "Wait the amount of time after provisioning a shell script, this pause be taken if all previous steps were successful.",
                            "default": "5m"
                        },
                        "pause_before": { "default": "5s" },
                        "max_retries": { "default": 0 },
                        "only": { "default": [""] },
                        "override": {},
                        "timeout": { "default": "20m" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "shell-local",
                            "enum": ["shell-local"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "windows-shell",
                            "enum": ["windows-shell"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "windows-restart",
                            "enum": ["windows-restart"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "",
                            "enum": [""]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "",
                            "enum": [""]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }]
            }
        },
        "post-processors": {
            "type": "array",
            "default": [{ "type": "" }],
            "items": {
                "anyOf": [{
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "alicloud-import",
                            "enum": ["alicloud-import"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "amazon-import",
                            "enum": ["amazon-import"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "artifice",
                            "enum": ["artifice"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "compress",
                            "enum": ["compress"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "checksum",
                            "enum": ["checksum"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "digitalocean-import",
                            "enum": ["digitalocean-import"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "docker-import",
                            "enum": ["docker-import"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "docker-push",
                            "enum": ["docker-push"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "docker-save",
                            "enum": ["docker-save"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "docker-tag",
                            "enum": ["docker-tag"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "exoscale-import",
                            "enum": ["exoscale-import"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "googlecompute-export",
                            "enum": ["googlecompute-export"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "googlecompute-import",
                            "enum": ["googlecompute-import"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "manifest",
                            "enum": ["manifest"]
                        },
                        "output": {
                            "type": "string",
                            "description": "The manifest will be written to this file. This defaults to packer-manifest.json.",
                            "default": "packer-manifest.json"
                        },
                        "strip_path": {
                            "type": "boolean",
                            "description": "Write only filename without the path to the manifest file. This defaults to false.",
                            "default": false
                        },
                        "strip_time": {
                            "type": "boolean",
                            "description": "Don't write the build_time field from the output.",
                            "default": false
                        },
                        "custom_data": {
                            "type": "object",
                            "description": "Arbitrary data to add to the manifest. This is a template engine. Therefore, you may use user variables and template functions in this field.",
                            "default": { "key": "value" }
                        },
                        "keep_input_artifact": {
                            "type": "boolean",
                            "description": "Unlike most other post-processors, the keep_input_artifact option will have no effect for the manifest post-processor. We will always retain the input artifact for manifest, since deleting the files we just recorded is not a behavior anyone should ever expect. keep_input_artifact will therefore always be evaluated as true, regardless of the value you enter into this field.",
                            "default": false
                        }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "local-shell",
                            "enum": ["local-shell"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "ucloud-import",
                            "enum": ["ucloud-import"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "vagrant",
                            "enum": ["vagrant"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "vagrant-cloud",
                            "enum": ["vagrant-cloud"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "vsphere",
                            "enum": ["vsphere"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }, {
                    "type": "object",
                    "properties": {
                        "type": {
                            "default": "vsphere-template",
                            "enum": ["vsphere-template"]
                        },
                        "todo": { "$ref": "#/definitions/todo" }
                    }
                }]
            }
        }
    }
}
